// generated by:
// ./scripts/get_syscall_params.sh > pkg/straceback/syscall_params.go

package straceback

func gatherSyscallsStatic() error {
	cSyscalls = make(map[string]Syscall)

	var err error
	var cSyscall *Syscall

	cSyscall, err = parseSyscall("socket", string(`name: sys_enter_socket
ID: 1322
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int family;	offset:16;	size:8;	signed:0;
	field:int type;	offset:24;	size:8;	signed:0;
	field:int protocol;	offset:32;	size:8;	signed:0;

print fmt: "family: 0x%08lx, type: 0x%08lx, protocol: 0x%08lx", ((unsigned long)(REC->family)), ((unsigned long)(REC->type)), ((unsigned long)(REC->protocol))
`))
	if err != nil {
		return err
	}
	cSyscalls["socket"] = *cSyscall
	cSyscall, err = parseSyscall("socketpair", string(`name: sys_enter_socketpair
ID: 1320
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int family;	offset:16;	size:8;	signed:0;
	field:int type;	offset:24;	size:8;	signed:0;
	field:int protocol;	offset:32;	size:8;	signed:0;
	field:int * usockvec;	offset:40;	size:8;	signed:0;

print fmt: "family: 0x%08lx, type: 0x%08lx, protocol: 0x%08lx, usockvec: 0x%08lx", ((unsigned long)(REC->family)), ((unsigned long)(REC->type)), ((unsigned long)(REC->protocol)), ((unsigned long)(REC->usockvec))
`))
	if err != nil {
		return err
	}
	cSyscalls["socketpair"] = *cSyscall
	cSyscall, err = parseSyscall("bind", string(`name: sys_enter_bind
ID: 1318
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * umyaddr;	offset:24;	size:8;	signed:0;
	field:int addrlen;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, umyaddr: 0x%08lx, addrlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->umyaddr)), ((unsigned long)(REC->addrlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["bind"] = *cSyscall
	cSyscall, err = parseSyscall("listen", string(`name: sys_enter_listen
ID: 1316
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int backlog;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, backlog: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->backlog))
`))
	if err != nil {
		return err
	}
	cSyscalls["listen"] = *cSyscall
	cSyscall, err = parseSyscall("accept4", string(`name: sys_enter_accept4
ID: 1314
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * upeer_sockaddr;	offset:24;	size:8;	signed:0;
	field:int * upeer_addrlen;	offset:32;	size:8;	signed:0;
	field:int flags;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, upeer_sockaddr: 0x%08lx, upeer_addrlen: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->upeer_sockaddr)), ((unsigned long)(REC->upeer_addrlen)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["accept4"] = *cSyscall
	cSyscall, err = parseSyscall("accept", string(`name: sys_enter_accept
ID: 1312
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * upeer_sockaddr;	offset:24;	size:8;	signed:0;
	field:int * upeer_addrlen;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, upeer_sockaddr: 0x%08lx, upeer_addrlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->upeer_sockaddr)), ((unsigned long)(REC->upeer_addrlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["accept"] = *cSyscall
	cSyscall, err = parseSyscall("connect", string(`name: sys_enter_connect
ID: 1310
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * uservaddr;	offset:24;	size:8;	signed:0;
	field:int addrlen;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, uservaddr: 0x%08lx, addrlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->uservaddr)), ((unsigned long)(REC->addrlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["connect"] = *cSyscall
	cSyscall, err = parseSyscall("getsockname", string(`name: sys_enter_getsockname
ID: 1308
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * usockaddr;	offset:24;	size:8;	signed:0;
	field:int * usockaddr_len;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, usockaddr: 0x%08lx, usockaddr_len: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->usockaddr)), ((unsigned long)(REC->usockaddr_len))
`))
	if err != nil {
		return err
	}
	cSyscalls["getsockname"] = *cSyscall
	cSyscall, err = parseSyscall("getpeername", string(`name: sys_enter_getpeername
ID: 1306
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct sockaddr * usockaddr;	offset:24;	size:8;	signed:0;
	field:int * usockaddr_len;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, usockaddr: 0x%08lx, usockaddr_len: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->usockaddr)), ((unsigned long)(REC->usockaddr_len))
`))
	if err != nil {
		return err
	}
	cSyscalls["getpeername"] = *cSyscall
	cSyscall, err = parseSyscall("sendto", string(`name: sys_enter_sendto
ID: 1304
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:void * buff;	offset:24;	size:8;	signed:0;
	field:size_t len;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;
	field:struct sockaddr * addr;	offset:48;	size:8;	signed:0;
	field:int addr_len;	offset:56;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buff: 0x%08lx, len: 0x%08lx, flags: 0x%08lx, addr: 0x%08lx, addr_len: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buff)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->addr)), ((unsigned long)(REC->addr_len))
`))
	if err != nil {
		return err
	}
	cSyscalls["sendto"] = *cSyscall
	cSyscall, err = parseSyscall("recvfrom", string(`name: sys_enter_recvfrom
ID: 1302
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:void * ubuf;	offset:24;	size:8;	signed:0;
	field:size_t size;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;
	field:struct sockaddr * addr;	offset:48;	size:8;	signed:0;
	field:int * addr_len;	offset:56;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, ubuf: 0x%08lx, size: 0x%08lx, flags: 0x%08lx, addr: 0x%08lx, addr_len: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->ubuf)), ((unsigned long)(REC->size)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->addr)), ((unsigned long)(REC->addr_len))
`))
	if err != nil {
		return err
	}
	cSyscalls["recvfrom"] = *cSyscall
	cSyscall, err = parseSyscall("setsockopt", string(`name: sys_enter_setsockopt
ID: 1300
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int level;	offset:24;	size:8;	signed:0;
	field:int optname;	offset:32;	size:8;	signed:0;
	field:char * optval;	offset:40;	size:8;	signed:0;
	field:int optlen;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, level: 0x%08lx, optname: 0x%08lx, optval: 0x%08lx, optlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->level)), ((unsigned long)(REC->optname)), ((unsigned long)(REC->optval)), ((unsigned long)(REC->optlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["setsockopt"] = *cSyscall
	cSyscall, err = parseSyscall("getsockopt", string(`name: sys_enter_getsockopt
ID: 1298
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int level;	offset:24;	size:8;	signed:0;
	field:int optname;	offset:32;	size:8;	signed:0;
	field:char * optval;	offset:40;	size:8;	signed:0;
	field:int * optlen;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, level: 0x%08lx, optname: 0x%08lx, optval: 0x%08lx, optlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->level)), ((unsigned long)(REC->optname)), ((unsigned long)(REC->optval)), ((unsigned long)(REC->optlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["getsockopt"] = *cSyscall
	cSyscall, err = parseSyscall("shutdown", string(`name: sys_enter_shutdown
ID: 1296
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int how;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, how: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->how))
`))
	if err != nil {
		return err
	}
	cSyscalls["shutdown"] = *cSyscall
	cSyscall, err = parseSyscall("sendmsg", string(`name: sys_enter_sendmsg
ID: 1294
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct user_msghdr * msg;	offset:24;	size:8;	signed:0;
	field:unsigned int flags;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, msg: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->msg)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["sendmsg"] = *cSyscall
	cSyscall, err = parseSyscall("sendmmsg", string(`name: sys_enter_sendmmsg
ID: 1292
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct mmsghdr * mmsg;	offset:24;	size:8;	signed:0;
	field:unsigned int vlen;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, mmsg: 0x%08lx, vlen: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->mmsg)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["sendmmsg"] = *cSyscall
	cSyscall, err = parseSyscall("recvmsg", string(`name: sys_enter_recvmsg
ID: 1290
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct user_msghdr * msg;	offset:24;	size:8;	signed:0;
	field:unsigned int flags;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, msg: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->msg)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["recvmsg"] = *cSyscall
	cSyscall, err = parseSyscall("recvmmsg", string(`name: sys_enter_recvmmsg
ID: 1288
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:struct mmsghdr * mmsg;	offset:24;	size:8;	signed:0;
	field:unsigned int vlen;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;
	field:struct __kernel_timespec * timeout;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, mmsg: 0x%08lx, vlen: 0x%08lx, flags: 0x%08lx, timeout: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->mmsg)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["recvmmsg"] = *cSyscall
	cSyscall, err = parseSyscall("getrandom", string(`name: sys_enter_getrandom
ID: 1144
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * buf;	offset:16;	size:8;	signed:0;
	field:size_t count;	offset:24;	size:8;	signed:0;
	field:unsigned int flags;	offset:32;	size:8;	signed:0;

print fmt: "buf: 0x%08lx, count: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->buf)), ((unsigned long)(REC->count)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["getrandom"] = *cSyscall
	cSyscall, err = parseSyscall("ioprio_set", string(`name: sys_enter_ioprio_set
ID: 1109
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:int who;	offset:24;	size:8;	signed:0;
	field:int ioprio;	offset:32;	size:8;	signed:0;

print fmt: "which: 0x%08lx, who: 0x%08lx, ioprio: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->who)), ((unsigned long)(REC->ioprio))
`))
	if err != nil {
		return err
	}
	cSyscalls["ioprio_set"] = *cSyscall
	cSyscall, err = parseSyscall("ioprio_get", string(`name: sys_enter_ioprio_get
ID: 1107
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:int who;	offset:24;	size:8;	signed:0;

print fmt: "which: 0x%08lx, who: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->who))
`))
	if err != nil {
		return err
	}
	cSyscalls["ioprio_get"] = *cSyscall
	cSyscall, err = parseSyscall("add_key", string(`name: sys_enter_add_key
ID: 1087
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * _type;	offset:16;	size:8;	signed:0;
	field:const char * _description;	offset:24;	size:8;	signed:0;
	field:const void * _payload;	offset:32;	size:8;	signed:0;
	field:size_t plen;	offset:40;	size:8;	signed:0;
	field:key_serial_t ringid;	offset:48;	size:8;	signed:0;

print fmt: "_type: 0x%08lx, _description: 0x%08lx, _payload: 0x%08lx, plen: 0x%08lx, ringid: 0x%08lx", ((unsigned long)(REC->_type)), ((unsigned long)(REC->_description)), ((unsigned long)(REC->_payload)), ((unsigned long)(REC->plen)), ((unsigned long)(REC->ringid))
`))
	if err != nil {
		return err
	}
	cSyscalls["add_key"] = *cSyscall
	cSyscall, err = parseSyscall("request_key", string(`name: sys_enter_request_key
ID: 1085
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * _type;	offset:16;	size:8;	signed:0;
	field:const char * _description;	offset:24;	size:8;	signed:0;
	field:const char * _callout_info;	offset:32;	size:8;	signed:0;
	field:key_serial_t destringid;	offset:40;	size:8;	signed:0;

print fmt: "_type: 0x%08lx, _description: 0x%08lx, _callout_info: 0x%08lx, destringid: 0x%08lx", ((unsigned long)(REC->_type)), ((unsigned long)(REC->_description)), ((unsigned long)(REC->_callout_info)), ((unsigned long)(REC->destringid))
`))
	if err != nil {
		return err
	}
	cSyscalls["request_key"] = *cSyscall
	cSyscall, err = parseSyscall("keyctl", string(`name: sys_enter_keyctl
ID: 1083
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int option;	offset:16;	size:8;	signed:0;
	field:unsigned long arg2;	offset:24;	size:8;	signed:0;
	field:unsigned long arg3;	offset:32;	size:8;	signed:0;
	field:unsigned long arg4;	offset:40;	size:8;	signed:0;
	field:unsigned long arg5;	offset:48;	size:8;	signed:0;

print fmt: "option: 0x%08lx, arg2: 0x%08lx, arg3: 0x%08lx, arg4: 0x%08lx, arg5: 0x%08lx", ((unsigned long)(REC->option)), ((unsigned long)(REC->arg2)), ((unsigned long)(REC->arg3)), ((unsigned long)(REC->arg4)), ((unsigned long)(REC->arg5))
`))
	if err != nil {
		return err
	}
	cSyscalls["keyctl"] = *cSyscall
	cSyscall, err = parseSyscall("mq_open", string(`name: sys_enter_mq_open
ID: 1081
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * u_name;	offset:16;	size:8;	signed:0;
	field:int oflag;	offset:24;	size:8;	signed:0;
	field:umode_t mode;	offset:32;	size:8;	signed:0;
	field:struct mq_attr * u_attr;	offset:40;	size:8;	signed:0;

print fmt: "u_name: 0x%08lx, oflag: 0x%08lx, mode: 0x%08lx, u_attr: 0x%08lx", ((unsigned long)(REC->u_name)), ((unsigned long)(REC->oflag)), ((unsigned long)(REC->mode)), ((unsigned long)(REC->u_attr))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_open"] = *cSyscall
	cSyscall, err = parseSyscall("mq_unlink", string(`name: sys_enter_mq_unlink
ID: 1079
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * u_name;	offset:16;	size:8;	signed:0;

print fmt: "u_name: 0x%08lx", ((unsigned long)(REC->u_name))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_unlink"] = *cSyscall
	cSyscall, err = parseSyscall("mq_timedsend", string(`name: sys_enter_mq_timedsend
ID: 1077
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:mqd_t mqdes;	offset:16;	size:8;	signed:0;
	field:const char * u_msg_ptr;	offset:24;	size:8;	signed:0;
	field:size_t msg_len;	offset:32;	size:8;	signed:0;
	field:unsigned int msg_prio;	offset:40;	size:8;	signed:0;
	field:const struct __kernel_timespec * u_abs_timeout;	offset:48;	size:8;	signed:0;

print fmt: "mqdes: 0x%08lx, u_msg_ptr: 0x%08lx, msg_len: 0x%08lx, msg_prio: 0x%08lx, u_abs_timeout: 0x%08lx", ((unsigned long)(REC->mqdes)), ((unsigned long)(REC->u_msg_ptr)), ((unsigned long)(REC->msg_len)), ((unsigned long)(REC->msg_prio)), ((unsigned long)(REC->u_abs_timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_timedsend"] = *cSyscall
	cSyscall, err = parseSyscall("mq_timedreceive", string(`name: sys_enter_mq_timedreceive
ID: 1075
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:mqd_t mqdes;	offset:16;	size:8;	signed:0;
	field:char * u_msg_ptr;	offset:24;	size:8;	signed:0;
	field:size_t msg_len;	offset:32;	size:8;	signed:0;
	field:unsigned int * u_msg_prio;	offset:40;	size:8;	signed:0;
	field:const struct __kernel_timespec * u_abs_timeout;	offset:48;	size:8;	signed:0;

print fmt: "mqdes: 0x%08lx, u_msg_ptr: 0x%08lx, msg_len: 0x%08lx, u_msg_prio: 0x%08lx, u_abs_timeout: 0x%08lx", ((unsigned long)(REC->mqdes)), ((unsigned long)(REC->u_msg_ptr)), ((unsigned long)(REC->msg_len)), ((unsigned long)(REC->u_msg_prio)), ((unsigned long)(REC->u_abs_timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_timedreceive"] = *cSyscall
	cSyscall, err = parseSyscall("mq_notify", string(`name: sys_enter_mq_notify
ID: 1073
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:mqd_t mqdes;	offset:16;	size:8;	signed:0;
	field:const struct sigevent * u_notification;	offset:24;	size:8;	signed:0;

print fmt: "mqdes: 0x%08lx, u_notification: 0x%08lx", ((unsigned long)(REC->mqdes)), ((unsigned long)(REC->u_notification))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_notify"] = *cSyscall
	cSyscall, err = parseSyscall("mq_getsetattr", string(`name: sys_enter_mq_getsetattr
ID: 1071
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:mqd_t mqdes;	offset:16;	size:8;	signed:0;
	field:const struct mq_attr * u_mqstat;	offset:24;	size:8;	signed:0;
	field:struct mq_attr * u_omqstat;	offset:32;	size:8;	signed:0;

print fmt: "mqdes: 0x%08lx, u_mqstat: 0x%08lx, u_omqstat: 0x%08lx", ((unsigned long)(REC->mqdes)), ((unsigned long)(REC->u_mqstat)), ((unsigned long)(REC->u_omqstat))
`))
	if err != nil {
		return err
	}
	cSyscalls["mq_getsetattr"] = *cSyscall
	cSyscall, err = parseSyscall("shmget", string(`name: sys_enter_shmget
ID: 1069
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:key_t key;	offset:16;	size:8;	signed:0;
	field:size_t size;	offset:24;	size:8;	signed:0;
	field:int shmflg;	offset:32;	size:8;	signed:0;

print fmt: "key: 0x%08lx, size: 0x%08lx, shmflg: 0x%08lx", ((unsigned long)(REC->key)), ((unsigned long)(REC->size)), ((unsigned long)(REC->shmflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["shmget"] = *cSyscall
	cSyscall, err = parseSyscall("shmctl", string(`name: sys_enter_shmctl
ID: 1067
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int shmid;	offset:16;	size:8;	signed:0;
	field:int cmd;	offset:24;	size:8;	signed:0;
	field:struct shmid_ds * buf;	offset:32;	size:8;	signed:0;

print fmt: "shmid: 0x%08lx, cmd: 0x%08lx, buf: 0x%08lx", ((unsigned long)(REC->shmid)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->buf))
`))
	if err != nil {
		return err
	}
	cSyscalls["shmctl"] = *cSyscall
	cSyscall, err = parseSyscall("shmat", string(`name: sys_enter_shmat
ID: 1065
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int shmid;	offset:16;	size:8;	signed:0;
	field:char * shmaddr;	offset:24;	size:8;	signed:0;
	field:int shmflg;	offset:32;	size:8;	signed:0;

print fmt: "shmid: 0x%08lx, shmaddr: 0x%08lx, shmflg: 0x%08lx", ((unsigned long)(REC->shmid)), ((unsigned long)(REC->shmaddr)), ((unsigned long)(REC->shmflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["shmat"] = *cSyscall
	cSyscall, err = parseSyscall("shmdt", string(`name: sys_enter_shmdt
ID: 1063
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * shmaddr;	offset:16;	size:8;	signed:0;

print fmt: "shmaddr: 0x%08lx", ((unsigned long)(REC->shmaddr))
`))
	if err != nil {
		return err
	}
	cSyscalls["shmdt"] = *cSyscall
	cSyscall, err = parseSyscall("semget", string(`name: sys_enter_semget
ID: 1061
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:key_t key;	offset:16;	size:8;	signed:0;
	field:int nsems;	offset:24;	size:8;	signed:0;
	field:int semflg;	offset:32;	size:8;	signed:0;

print fmt: "key: 0x%08lx, nsems: 0x%08lx, semflg: 0x%08lx", ((unsigned long)(REC->key)), ((unsigned long)(REC->nsems)), ((unsigned long)(REC->semflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["semget"] = *cSyscall
	cSyscall, err = parseSyscall("semctl", string(`name: sys_enter_semctl
ID: 1059
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int semid;	offset:16;	size:8;	signed:0;
	field:int semnum;	offset:24;	size:8;	signed:0;
	field:int cmd;	offset:32;	size:8;	signed:0;
	field:unsigned long arg;	offset:40;	size:8;	signed:0;

print fmt: "semid: 0x%08lx, semnum: 0x%08lx, cmd: 0x%08lx, arg: 0x%08lx", ((unsigned long)(REC->semid)), ((unsigned long)(REC->semnum)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->arg))
`))
	if err != nil {
		return err
	}
	cSyscalls["semctl"] = *cSyscall
	cSyscall, err = parseSyscall("semtimedop", string(`name: sys_enter_semtimedop
ID: 1057
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int semid;	offset:16;	size:8;	signed:0;
	field:struct sembuf * tsops;	offset:24;	size:8;	signed:0;
	field:unsigned int nsops;	offset:32;	size:8;	signed:0;
	field:const struct __kernel_timespec * timeout;	offset:40;	size:8;	signed:0;

print fmt: "semid: 0x%08lx, tsops: 0x%08lx, nsops: 0x%08lx, timeout: 0x%08lx", ((unsigned long)(REC->semid)), ((unsigned long)(REC->tsops)), ((unsigned long)(REC->nsops)), ((unsigned long)(REC->timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["semtimedop"] = *cSyscall
	cSyscall, err = parseSyscall("semop", string(`name: sys_enter_semop
ID: 1055
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int semid;	offset:16;	size:8;	signed:0;
	field:struct sembuf * tsops;	offset:24;	size:8;	signed:0;
	field:unsigned nsops;	offset:32;	size:8;	signed:0;

print fmt: "semid: 0x%08lx, tsops: 0x%08lx, nsops: 0x%08lx", ((unsigned long)(REC->semid)), ((unsigned long)(REC->tsops)), ((unsigned long)(REC->nsops))
`))
	if err != nil {
		return err
	}
	cSyscalls["semop"] = *cSyscall
	cSyscall, err = parseSyscall("msgget", string(`name: sys_enter_msgget
ID: 1053
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:key_t key;	offset:16;	size:8;	signed:0;
	field:int msgflg;	offset:24;	size:8;	signed:0;

print fmt: "key: 0x%08lx, msgflg: 0x%08lx", ((unsigned long)(REC->key)), ((unsigned long)(REC->msgflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["msgget"] = *cSyscall
	cSyscall, err = parseSyscall("msgctl", string(`name: sys_enter_msgctl
ID: 1051
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int msqid;	offset:16;	size:8;	signed:0;
	field:int cmd;	offset:24;	size:8;	signed:0;
	field:struct msqid_ds * buf;	offset:32;	size:8;	signed:0;

print fmt: "msqid: 0x%08lx, cmd: 0x%08lx, buf: 0x%08lx", ((unsigned long)(REC->msqid)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->buf))
`))
	if err != nil {
		return err
	}
	cSyscalls["msgctl"] = *cSyscall
	cSyscall, err = parseSyscall("msgsnd", string(`name: sys_enter_msgsnd
ID: 1049
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int msqid;	offset:16;	size:8;	signed:0;
	field:struct msgbuf * msgp;	offset:24;	size:8;	signed:0;
	field:size_t msgsz;	offset:32;	size:8;	signed:0;
	field:int msgflg;	offset:40;	size:8;	signed:0;

print fmt: "msqid: 0x%08lx, msgp: 0x%08lx, msgsz: 0x%08lx, msgflg: 0x%08lx", ((unsigned long)(REC->msqid)), ((unsigned long)(REC->msgp)), ((unsigned long)(REC->msgsz)), ((unsigned long)(REC->msgflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["msgsnd"] = *cSyscall
	cSyscall, err = parseSyscall("msgrcv", string(`name: sys_enter_msgrcv
ID: 1047
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int msqid;	offset:16;	size:8;	signed:0;
	field:struct msgbuf * msgp;	offset:24;	size:8;	signed:0;
	field:size_t msgsz;	offset:32;	size:8;	signed:0;
	field:long msgtyp;	offset:40;	size:8;	signed:0;
	field:int msgflg;	offset:48;	size:8;	signed:0;

print fmt: "msqid: 0x%08lx, msgp: 0x%08lx, msgsz: 0x%08lx, msgtyp: 0x%08lx, msgflg: 0x%08lx", ((unsigned long)(REC->msqid)), ((unsigned long)(REC->msgp)), ((unsigned long)(REC->msgsz)), ((unsigned long)(REC->msgtyp)), ((unsigned long)(REC->msgflg))
`))
	if err != nil {
		return err
	}
	cSyscalls["msgrcv"] = *cSyscall
	cSyscall, err = parseSyscall("lookup_dcookie", string(`name: sys_enter_lookup_dcookie
ID: 924
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:u64 cookie64;	offset:16;	size:8;	signed:0;
	field:char * buf;	offset:24;	size:8;	signed:0;
	field:size_t len;	offset:32;	size:8;	signed:0;

print fmt: "cookie64: 0x%08lx, buf: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->cookie64)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["lookup_dcookie"] = *cSyscall
	cSyscall, err = parseSyscall("quotactl", string(`name: sys_enter_quotactl
ID: 922
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int cmd;	offset:16;	size:8;	signed:0;
	field:const char * special;	offset:24;	size:8;	signed:0;
	field:qid_t id;	offset:32;	size:8;	signed:0;
	field:void * addr;	offset:40;	size:8;	signed:0;

print fmt: "cmd: 0x%08lx, special: 0x%08lx, id: 0x%08lx, addr: 0x%08lx", ((unsigned long)(REC->cmd)), ((unsigned long)(REC->special)), ((unsigned long)(REC->id)), ((unsigned long)(REC->addr))
`))
	if err != nil {
		return err
	}
	cSyscalls["quotactl"] = *cSyscall
	cSyscall, err = parseSyscall("name_to_handle_at", string(`name: sys_enter_name_to_handle_at
ID: 920
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:struct file_handle * handle;	offset:32;	size:8;	signed:0;
	field:int * mnt_id;	offset:40;	size:8;	signed:0;
	field:int flag;	offset:48;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, name: 0x%08lx, handle: 0x%08lx, mnt_id: 0x%08lx, flag: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->name)), ((unsigned long)(REC->handle)), ((unsigned long)(REC->mnt_id)), ((unsigned long)(REC->flag))
`))
	if err != nil {
		return err
	}
	cSyscalls["name_to_handle_at"] = *cSyscall
	cSyscall, err = parseSyscall("open_by_handle_at", string(`name: sys_enter_open_by_handle_at
ID: 918
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int mountdirfd;	offset:16;	size:8;	signed:0;
	field:struct file_handle * handle;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;

print fmt: "mountdirfd: 0x%08lx, handle: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->mountdirfd)), ((unsigned long)(REC->handle)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["open_by_handle_at"] = *cSyscall
	cSyscall, err = parseSyscall("flock", string(`name: sys_enter_flock
ID: 905
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:unsigned int cmd;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, cmd: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->cmd))
`))
	if err != nil {
		return err
	}
	cSyscalls["flock"] = *cSyscall
	cSyscall, err = parseSyscall("io_uring_enter", string(`name: sys_enter_io_uring_enter
ID: 889
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:u32 to_submit;	offset:24;	size:8;	signed:0;
	field:u32 min_complete;	offset:32;	size:8;	signed:0;
	field:u32 flags;	offset:40;	size:8;	signed:0;
	field:const sigset_t * sig;	offset:48;	size:8;	signed:0;
	field:size_t sigsz;	offset:56;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, to_submit: 0x%08lx, min_complete: 0x%08lx, flags: 0x%08lx, sig: 0x%08lx, sigsz: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->to_submit)), ((unsigned long)(REC->min_complete)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->sig)), ((unsigned long)(REC->sigsz))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_uring_enter"] = *cSyscall
	cSyscall, err = parseSyscall("io_uring_setup", string(`name: sys_enter_io_uring_setup
ID: 887
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:u32 entries;	offset:16;	size:8;	signed:0;
	field:struct io_uring_params * params;	offset:24;	size:8;	signed:0;

print fmt: "entries: 0x%08lx, params: 0x%08lx", ((unsigned long)(REC->entries)), ((unsigned long)(REC->params))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_uring_setup"] = *cSyscall
	cSyscall, err = parseSyscall("io_uring_register", string(`name: sys_enter_io_uring_register
ID: 885
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:unsigned int opcode;	offset:24;	size:8;	signed:0;
	field:void * arg;	offset:32;	size:8;	signed:0;
	field:unsigned int nr_args;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, opcode: 0x%08lx, arg: 0x%08lx, nr_args: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->opcode)), ((unsigned long)(REC->arg)), ((unsigned long)(REC->nr_args))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_uring_register"] = *cSyscall
	cSyscall, err = parseSyscall("io_setup", string(`name: sys_enter_io_setup
ID: 883
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned nr_events;	offset:16;	size:8;	signed:0;
	field:aio_context_t * ctxp;	offset:24;	size:8;	signed:0;

print fmt: "nr_events: 0x%08lx, ctxp: 0x%08lx", ((unsigned long)(REC->nr_events)), ((unsigned long)(REC->ctxp))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_setup"] = *cSyscall
	cSyscall, err = parseSyscall("io_destroy", string(`name: sys_enter_io_destroy
ID: 881
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:aio_context_t ctx;	offset:16;	size:8;	signed:0;

print fmt: "ctx: 0x%08lx", ((unsigned long)(REC->ctx))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_destroy"] = *cSyscall
	cSyscall, err = parseSyscall("io_submit", string(`name: sys_enter_io_submit
ID: 879
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:aio_context_t ctx_id;	offset:16;	size:8;	signed:0;
	field:long nr;	offset:24;	size:8;	signed:0;
	field:struct iocb * * iocbpp;	offset:32;	size:8;	signed:0;

print fmt: "ctx_id: 0x%08lx, nr: 0x%08lx, iocbpp: 0x%08lx", ((unsigned long)(REC->ctx_id)), ((unsigned long)(REC->nr)), ((unsigned long)(REC->iocbpp))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_submit"] = *cSyscall
	cSyscall, err = parseSyscall("io_cancel", string(`name: sys_enter_io_cancel
ID: 877
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:aio_context_t ctx_id;	offset:16;	size:8;	signed:0;
	field:struct iocb * iocb;	offset:24;	size:8;	signed:0;
	field:struct io_event * result;	offset:32;	size:8;	signed:0;

print fmt: "ctx_id: 0x%08lx, iocb: 0x%08lx, result: 0x%08lx", ((unsigned long)(REC->ctx_id)), ((unsigned long)(REC->iocb)), ((unsigned long)(REC->result))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_cancel"] = *cSyscall
	cSyscall, err = parseSyscall("io_getevents", string(`name: sys_enter_io_getevents
ID: 875
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:aio_context_t ctx_id;	offset:16;	size:8;	signed:0;
	field:long min_nr;	offset:24;	size:8;	signed:0;
	field:long nr;	offset:32;	size:8;	signed:0;
	field:struct io_event * events;	offset:40;	size:8;	signed:0;
	field:struct __kernel_timespec * timeout;	offset:48;	size:8;	signed:0;

print fmt: "ctx_id: 0x%08lx, min_nr: 0x%08lx, nr: 0x%08lx, events: 0x%08lx, timeout: 0x%08lx", ((unsigned long)(REC->ctx_id)), ((unsigned long)(REC->min_nr)), ((unsigned long)(REC->nr)), ((unsigned long)(REC->events)), ((unsigned long)(REC->timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_getevents"] = *cSyscall
	cSyscall, err = parseSyscall("io_pgetevents", string(`name: sys_enter_io_pgetevents
ID: 873
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:aio_context_t ctx_id;	offset:16;	size:8;	signed:0;
	field:long min_nr;	offset:24;	size:8;	signed:0;
	field:long nr;	offset:32;	size:8;	signed:0;
	field:struct io_event * events;	offset:40;	size:8;	signed:0;
	field:struct __kernel_timespec * timeout;	offset:48;	size:8;	signed:0;
	field:const struct __aio_sigset * usig;	offset:56;	size:8;	signed:0;

print fmt: "ctx_id: 0x%08lx, min_nr: 0x%08lx, nr: 0x%08lx, events: 0x%08lx, timeout: 0x%08lx, usig: 0x%08lx", ((unsigned long)(REC->ctx_id)), ((unsigned long)(REC->min_nr)), ((unsigned long)(REC->nr)), ((unsigned long)(REC->events)), ((unsigned long)(REC->timeout)), ((unsigned long)(REC->usig))
`))
	if err != nil {
		return err
	}
	cSyscalls["io_pgetevents"] = *cSyscall
	cSyscall, err = parseSyscall("userfaultfd", string(`name: sys_enter_userfaultfd
ID: 871
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int flags;	offset:16;	size:8;	signed:0;

print fmt: "flags: 0x%08lx", ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["userfaultfd"] = *cSyscall
	cSyscall, err = parseSyscall("eventfd2", string(`name: sys_enter_eventfd2
ID: 869
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int count;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;

print fmt: "count: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->count)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["eventfd2"] = *cSyscall
	cSyscall, err = parseSyscall("eventfd", string(`name: sys_enter_eventfd
ID: 867
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int count;	offset:16;	size:8;	signed:0;

print fmt: "count: 0x%08lx", ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["eventfd"] = *cSyscall
	cSyscall, err = parseSyscall("timerfd_create", string(`name: sys_enter_timerfd_create
ID: 865
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int clockid;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;

print fmt: "clockid: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->clockid)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["timerfd_create"] = *cSyscall
	cSyscall, err = parseSyscall("timerfd_settime", string(`name: sys_enter_timerfd_settime
ID: 863
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int ufd;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;
	field:const struct __kernel_itimerspec * utmr;	offset:32;	size:8;	signed:0;
	field:struct __kernel_itimerspec * otmr;	offset:40;	size:8;	signed:0;

print fmt: "ufd: 0x%08lx, flags: 0x%08lx, utmr: 0x%08lx, otmr: 0x%08lx", ((unsigned long)(REC->ufd)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->utmr)), ((unsigned long)(REC->otmr))
`))
	if err != nil {
		return err
	}
	cSyscalls["timerfd_settime"] = *cSyscall
	cSyscall, err = parseSyscall("timerfd_gettime", string(`name: sys_enter_timerfd_gettime
ID: 861
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int ufd;	offset:16;	size:8;	signed:0;
	field:struct __kernel_itimerspec * otmr;	offset:24;	size:8;	signed:0;

print fmt: "ufd: 0x%08lx, otmr: 0x%08lx", ((unsigned long)(REC->ufd)), ((unsigned long)(REC->otmr))
`))
	if err != nil {
		return err
	}
	cSyscalls["timerfd_gettime"] = *cSyscall
	cSyscall, err = parseSyscall("signalfd4", string(`name: sys_enter_signalfd4
ID: 859
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int ufd;	offset:16;	size:8;	signed:0;
	field:sigset_t * user_mask;	offset:24;	size:8;	signed:0;
	field:size_t sizemask;	offset:32;	size:8;	signed:0;
	field:int flags;	offset:40;	size:8;	signed:0;

print fmt: "ufd: 0x%08lx, user_mask: 0x%08lx, sizemask: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->ufd)), ((unsigned long)(REC->user_mask)), ((unsigned long)(REC->sizemask)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["signalfd4"] = *cSyscall
	cSyscall, err = parseSyscall("signalfd", string(`name: sys_enter_signalfd
ID: 857
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int ufd;	offset:16;	size:8;	signed:0;
	field:sigset_t * user_mask;	offset:24;	size:8;	signed:0;
	field:size_t sizemask;	offset:32;	size:8;	signed:0;

print fmt: "ufd: 0x%08lx, user_mask: 0x%08lx, sizemask: 0x%08lx", ((unsigned long)(REC->ufd)), ((unsigned long)(REC->user_mask)), ((unsigned long)(REC->sizemask))
`))
	if err != nil {
		return err
	}
	cSyscalls["signalfd"] = *cSyscall
	cSyscall, err = parseSyscall("epoll_create1", string(`name: sys_enter_epoll_create1
ID: 855
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int flags;	offset:16;	size:8;	signed:0;

print fmt: "flags: 0x%08lx", ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["epoll_create1"] = *cSyscall
	cSyscall, err = parseSyscall("epoll_create", string(`name: sys_enter_epoll_create
ID: 853
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int size;	offset:16;	size:8;	signed:0;

print fmt: "size: 0x%08lx", ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["epoll_create"] = *cSyscall
	cSyscall, err = parseSyscall("epoll_ctl", string(`name: sys_enter_epoll_ctl
ID: 851
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int epfd;	offset:16;	size:8;	signed:0;
	field:int op;	offset:24;	size:8;	signed:0;
	field:int fd;	offset:32;	size:8;	signed:0;
	field:struct epoll_event * event;	offset:40;	size:8;	signed:0;

print fmt: "epfd: 0x%08lx, op: 0x%08lx, fd: 0x%08lx, event: 0x%08lx", ((unsigned long)(REC->epfd)), ((unsigned long)(REC->op)), ((unsigned long)(REC->fd)), ((unsigned long)(REC->event))
`))
	if err != nil {
		return err
	}
	cSyscalls["epoll_ctl"] = *cSyscall
	cSyscall, err = parseSyscall("epoll_wait", string(`name: sys_enter_epoll_wait
ID: 849
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int epfd;	offset:16;	size:8;	signed:0;
	field:struct epoll_event * events;	offset:24;	size:8;	signed:0;
	field:int maxevents;	offset:32;	size:8;	signed:0;
	field:int timeout;	offset:40;	size:8;	signed:0;

print fmt: "epfd: 0x%08lx, events: 0x%08lx, maxevents: 0x%08lx, timeout: 0x%08lx", ((unsigned long)(REC->epfd)), ((unsigned long)(REC->events)), ((unsigned long)(REC->maxevents)), ((unsigned long)(REC->timeout))
`))
	if err != nil {
		return err
	}
	cSyscalls["epoll_wait"] = *cSyscall
	cSyscall, err = parseSyscall("epoll_pwait", string(`name: sys_enter_epoll_pwait
ID: 847
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int epfd;	offset:16;	size:8;	signed:0;
	field:struct epoll_event * events;	offset:24;	size:8;	signed:0;
	field:int maxevents;	offset:32;	size:8;	signed:0;
	field:int timeout;	offset:40;	size:8;	signed:0;
	field:const sigset_t * sigmask;	offset:48;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:56;	size:8;	signed:0;

print fmt: "epfd: 0x%08lx, events: 0x%08lx, maxevents: 0x%08lx, timeout: 0x%08lx, sigmask: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->epfd)), ((unsigned long)(REC->events)), ((unsigned long)(REC->maxevents)), ((unsigned long)(REC->timeout)), ((unsigned long)(REC->sigmask)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["epoll_pwait"] = *cSyscall
	cSyscall, err = parseSyscall("fanotify_init", string(`name: sys_enter_fanotify_init
ID: 845
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int flags;	offset:16;	size:8;	signed:0;
	field:unsigned int event_f_flags;	offset:24;	size:8;	signed:0;

print fmt: "flags: 0x%08lx, event_f_flags: 0x%08lx", ((unsigned long)(REC->flags)), ((unsigned long)(REC->event_f_flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["fanotify_init"] = *cSyscall
	cSyscall, err = parseSyscall("fanotify_mark", string(`name: sys_enter_fanotify_mark
ID: 843
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fanotify_fd;	offset:16;	size:8;	signed:0;
	field:unsigned int flags;	offset:24;	size:8;	signed:0;
	field:__u64 mask;	offset:32;	size:8;	signed:0;
	field:int dfd;	offset:40;	size:8;	signed:0;
	field:const char * pathname;	offset:48;	size:8;	signed:0;

print fmt: "fanotify_fd: 0x%08lx, flags: 0x%08lx, mask: 0x%08lx, dfd: 0x%08lx, pathname: 0x%08lx", ((unsigned long)(REC->fanotify_fd)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->mask)), ((unsigned long)(REC->dfd)), ((unsigned long)(REC->pathname))
`))
	if err != nil {
		return err
	}
	cSyscalls["fanotify_mark"] = *cSyscall
	cSyscall, err = parseSyscall("inotify_init1", string(`name: sys_enter_inotify_init1
ID: 841
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int flags;	offset:16;	size:8;	signed:0;

print fmt: "flags: 0x%08lx", ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["inotify_init1"] = *cSyscall
	cSyscall, err = parseSyscall("inotify_init", string(`name: sys_enter_inotify_init
ID: 839
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["inotify_init"] = *cSyscall
	cSyscall, err = parseSyscall("inotify_add_watch", string(`name: sys_enter_inotify_add_watch
ID: 837
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * pathname;	offset:24;	size:8;	signed:0;
	field:u32 mask;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, pathname: 0x%08lx, mask: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->pathname)), ((unsigned long)(REC->mask))
`))
	if err != nil {
		return err
	}
	cSyscalls["inotify_add_watch"] = *cSyscall
	cSyscall, err = parseSyscall("inotify_rm_watch", string(`name: sys_enter_inotify_rm_watch
ID: 835
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:__s32 wd;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, wd: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->wd))
`))
	if err != nil {
		return err
	}
	cSyscalls["inotify_rm_watch"] = *cSyscall
	cSyscall, err = parseSyscall("statfs", string(`name: sys_enter_statfs
ID: 833
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:struct statfs * buf;	offset:24;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, buf: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->buf))
`))
	if err != nil {
		return err
	}
	cSyscalls["statfs"] = *cSyscall
	cSyscall, err = parseSyscall("fstatfs", string(`name: sys_enter_fstatfs
ID: 831
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:struct statfs * buf;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buf: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buf))
`))
	if err != nil {
		return err
	}
	cSyscalls["fstatfs"] = *cSyscall
	cSyscall, err = parseSyscall("ustat", string(`name: sys_enter_ustat
ID: 829
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned dev;	offset:16;	size:8;	signed:0;
	field:struct ustat * ubuf;	offset:24;	size:8;	signed:0;

print fmt: "dev: 0x%08lx, ubuf: 0x%08lx", ((unsigned long)(REC->dev)), ((unsigned long)(REC->ubuf))
`))
	if err != nil {
		return err
	}
	cSyscalls["ustat"] = *cSyscall
	cSyscall, err = parseSyscall("getcwd", string(`name: sys_enter_getcwd
ID: 827
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * buf;	offset:16;	size:8;	signed:0;
	field:unsigned long size;	offset:24;	size:8;	signed:0;

print fmt: "buf: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->buf)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["getcwd"] = *cSyscall
	cSyscall, err = parseSyscall("utimensat", string(`name: sys_enter_utimensat
ID: 825
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:struct __kernel_timespec * utimes;	offset:32;	size:8;	signed:0;
	field:int flags;	offset:40;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, utimes: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->utimes)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["utimensat"] = *cSyscall
	cSyscall, err = parseSyscall("futimesat", string(`name: sys_enter_futimesat
ID: 823
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:struct timeval * utimes;	offset:32;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, utimes: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->utimes))
`))
	if err != nil {
		return err
	}
	cSyscalls["futimesat"] = *cSyscall
	cSyscall, err = parseSyscall("utimes", string(`name: sys_enter_utimes
ID: 821
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * filename;	offset:16;	size:8;	signed:0;
	field:struct timeval * utimes;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, utimes: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->utimes))
`))
	if err != nil {
		return err
	}
	cSyscalls["utimes"] = *cSyscall
	cSyscall, err = parseSyscall("utime", string(`name: sys_enter_utime
ID: 819
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * filename;	offset:16;	size:8;	signed:0;
	field:struct utimbuf * times;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, times: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->times))
`))
	if err != nil {
		return err
	}
	cSyscalls["utime"] = *cSyscall
	cSyscall, err = parseSyscall("sync", string(`name: sys_enter_sync
ID: 817
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["sync"] = *cSyscall
	cSyscall, err = parseSyscall("syncfs", string(`name: sys_enter_syncfs
ID: 815
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;

print fmt: "fd: 0x%08lx", ((unsigned long)(REC->fd))
`))
	if err != nil {
		return err
	}
	cSyscalls["syncfs"] = *cSyscall
	cSyscall, err = parseSyscall("fsync", string(`name: sys_enter_fsync
ID: 813
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;

print fmt: "fd: 0x%08lx", ((unsigned long)(REC->fd))
`))
	if err != nil {
		return err
	}
	cSyscalls["fsync"] = *cSyscall
	cSyscall, err = parseSyscall("fdatasync", string(`name: sys_enter_fdatasync
ID: 811
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;

print fmt: "fd: 0x%08lx", ((unsigned long)(REC->fd))
`))
	if err != nil {
		return err
	}
	cSyscalls["fdatasync"] = *cSyscall
	cSyscall, err = parseSyscall("sync_file_range", string(`name: sys_enter_sync_file_range
ID: 809
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:loff_t offset;	offset:24;	size:8;	signed:0;
	field:loff_t nbytes;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, offset: 0x%08lx, nbytes: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->nbytes)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["sync_file_range"] = *cSyscall
	cSyscall, err = parseSyscall("vmsplice", string(`name: sys_enter_vmsplice
ID: 807
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * uiov;	offset:24;	size:8;	signed:0;
	field:unsigned long nr_segs;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, uiov: 0x%08lx, nr_segs: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->uiov)), ((unsigned long)(REC->nr_segs)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["vmsplice"] = *cSyscall
	cSyscall, err = parseSyscall("splice", string(`name: sys_enter_splice
ID: 805
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd_in;	offset:16;	size:8;	signed:0;
	field:loff_t * off_in;	offset:24;	size:8;	signed:0;
	field:int fd_out;	offset:32;	size:8;	signed:0;
	field:loff_t * off_out;	offset:40;	size:8;	signed:0;
	field:size_t len;	offset:48;	size:8;	signed:0;
	field:unsigned int flags;	offset:56;	size:8;	signed:0;

print fmt: "fd_in: 0x%08lx, off_in: 0x%08lx, fd_out: 0x%08lx, off_out: 0x%08lx, len: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd_in)), ((unsigned long)(REC->off_in)), ((unsigned long)(REC->fd_out)), ((unsigned long)(REC->off_out)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["splice"] = *cSyscall
	cSyscall, err = parseSyscall("tee", string(`name: sys_enter_tee
ID: 803
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fdin;	offset:16;	size:8;	signed:0;
	field:int fdout;	offset:24;	size:8;	signed:0;
	field:size_t len;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "fdin: 0x%08lx, fdout: 0x%08lx, len: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fdin)), ((unsigned long)(REC->fdout)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["tee"] = *cSyscall
	cSyscall, err = parseSyscall("setxattr", string(`name: sys_enter_setxattr
ID: 772
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:const void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;
	field:int flags;	offset:48;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["setxattr"] = *cSyscall
	cSyscall, err = parseSyscall("lsetxattr", string(`name: sys_enter_lsetxattr
ID: 770
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:const void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;
	field:int flags;	offset:48;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["lsetxattr"] = *cSyscall
	cSyscall, err = parseSyscall("fsetxattr", string(`name: sys_enter_fsetxattr
ID: 768
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:const void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;
	field:int flags;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["fsetxattr"] = *cSyscall
	cSyscall, err = parseSyscall("getxattr", string(`name: sys_enter_getxattr
ID: 766
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["getxattr"] = *cSyscall
	cSyscall, err = parseSyscall("lgetxattr", string(`name: sys_enter_lgetxattr
ID: 764
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["lgetxattr"] = *cSyscall
	cSyscall, err = parseSyscall("fgetxattr", string(`name: sys_enter_fgetxattr
ID: 762
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;
	field:void * value;	offset:32;	size:8;	signed:0;
	field:size_t size;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, name: 0x%08lx, value: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->name)), ((unsigned long)(REC->value)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["fgetxattr"] = *cSyscall
	cSyscall, err = parseSyscall("listxattr", string(`name: sys_enter_listxattr
ID: 760
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:char * list;	offset:24;	size:8;	signed:0;
	field:size_t size;	offset:32;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, list: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->list)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["listxattr"] = *cSyscall
	cSyscall, err = parseSyscall("llistxattr", string(`name: sys_enter_llistxattr
ID: 758
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:char * list;	offset:24;	size:8;	signed:0;
	field:size_t size;	offset:32;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, list: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->list)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["llistxattr"] = *cSyscall
	cSyscall, err = parseSyscall("flistxattr", string(`name: sys_enter_flistxattr
ID: 756
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:char * list;	offset:24;	size:8;	signed:0;
	field:size_t size;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, list: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->list)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["flistxattr"] = *cSyscall
	cSyscall, err = parseSyscall("removexattr", string(`name: sys_enter_removexattr
ID: 754
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name))
`))
	if err != nil {
		return err
	}
	cSyscalls["removexattr"] = *cSyscall
	cSyscall, err = parseSyscall("lremovexattr", string(`name: sys_enter_lremovexattr
ID: 752
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, name: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->name))
`))
	if err != nil {
		return err
	}
	cSyscalls["lremovexattr"] = *cSyscall
	cSyscall, err = parseSyscall("fremovexattr", string(`name: sys_enter_fremovexattr
ID: 750
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * name;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, name: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->name))
`))
	if err != nil {
		return err
	}
	cSyscalls["fremovexattr"] = *cSyscall
	cSyscall, err = parseSyscall("umount", string(`name: sys_enter_umount
ID: 748
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * name;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;

print fmt: "name: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->name)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["umount"] = *cSyscall
	cSyscall, err = parseSyscall("mount", string(`name: sys_enter_mount
ID: 746
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * dev_name;	offset:16;	size:8;	signed:0;
	field:char * dir_name;	offset:24;	size:8;	signed:0;
	field:char * type;	offset:32;	size:8;	signed:0;
	field:unsigned long flags;	offset:40;	size:8;	signed:0;
	field:void * data;	offset:48;	size:8;	signed:0;

print fmt: "dev_name: 0x%08lx, dir_name: 0x%08lx, type: 0x%08lx, flags: 0x%08lx, data: 0x%08lx", ((unsigned long)(REC->dev_name)), ((unsigned long)(REC->dir_name)), ((unsigned long)(REC->type)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->data))
`))
	if err != nil {
		return err
	}
	cSyscalls["mount"] = *cSyscall
	cSyscall, err = parseSyscall("pivot_root", string(`name: sys_enter_pivot_root
ID: 744
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * new_root;	offset:16;	size:8;	signed:0;
	field:const char * put_old;	offset:24;	size:8;	signed:0;

print fmt: "new_root: 0x%08lx, put_old: 0x%08lx", ((unsigned long)(REC->new_root)), ((unsigned long)(REC->put_old))
`))
	if err != nil {
		return err
	}
	cSyscalls["pivot_root"] = *cSyscall
	cSyscall, err = parseSyscall("sysfs", string(`name: sys_enter_sysfs
ID: 742
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int option;	offset:16;	size:8;	signed:0;
	field:unsigned long arg1;	offset:24;	size:8;	signed:0;
	field:unsigned long arg2;	offset:32;	size:8;	signed:0;

print fmt: "option: 0x%08lx, arg1: 0x%08lx, arg2: 0x%08lx", ((unsigned long)(REC->option)), ((unsigned long)(REC->arg1)), ((unsigned long)(REC->arg2))
`))
	if err != nil {
		return err
	}
	cSyscalls["sysfs"] = *cSyscall
	cSyscall, err = parseSyscall("dup3", string(`name: sys_enter_dup3
ID: 740
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int oldfd;	offset:16;	size:8;	signed:0;
	field:unsigned int newfd;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;

print fmt: "oldfd: 0x%08lx, newfd: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->oldfd)), ((unsigned long)(REC->newfd)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["dup3"] = *cSyscall
	cSyscall, err = parseSyscall("dup2", string(`name: sys_enter_dup2
ID: 738
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int oldfd;	offset:16;	size:8;	signed:0;
	field:unsigned int newfd;	offset:24;	size:8;	signed:0;

print fmt: "oldfd: 0x%08lx, newfd: 0x%08lx", ((unsigned long)(REC->oldfd)), ((unsigned long)(REC->newfd))
`))
	if err != nil {
		return err
	}
	cSyscalls["dup2"] = *cSyscall
	cSyscall, err = parseSyscall("dup", string(`name: sys_enter_dup
ID: 736
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fildes;	offset:16;	size:8;	signed:0;

print fmt: "fildes: 0x%08lx", ((unsigned long)(REC->fildes))
`))
	if err != nil {
		return err
	}
	cSyscalls["dup"] = *cSyscall
	cSyscall, err = parseSyscall("select", string(`name: sys_enter_select
ID: 734
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int n;	offset:16;	size:8;	signed:0;
	field:fd_set * inp;	offset:24;	size:8;	signed:0;
	field:fd_set * outp;	offset:32;	size:8;	signed:0;
	field:fd_set * exp;	offset:40;	size:8;	signed:0;
	field:struct timeval * tvp;	offset:48;	size:8;	signed:0;

print fmt: "n: 0x%08lx, inp: 0x%08lx, outp: 0x%08lx, exp: 0x%08lx, tvp: 0x%08lx", ((unsigned long)(REC->n)), ((unsigned long)(REC->inp)), ((unsigned long)(REC->outp)), ((unsigned long)(REC->exp)), ((unsigned long)(REC->tvp))
`))
	if err != nil {
		return err
	}
	cSyscalls["select"] = *cSyscall
	cSyscall, err = parseSyscall("pselect6", string(`name: sys_enter_pselect6
ID: 732
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int n;	offset:16;	size:8;	signed:0;
	field:fd_set * inp;	offset:24;	size:8;	signed:0;
	field:fd_set * outp;	offset:32;	size:8;	signed:0;
	field:fd_set * exp;	offset:40;	size:8;	signed:0;
	field:struct __kernel_timespec * tsp;	offset:48;	size:8;	signed:0;
	field:void * sig;	offset:56;	size:8;	signed:0;

print fmt: "n: 0x%08lx, inp: 0x%08lx, outp: 0x%08lx, exp: 0x%08lx, tsp: 0x%08lx, sig: 0x%08lx", ((unsigned long)(REC->n)), ((unsigned long)(REC->inp)), ((unsigned long)(REC->outp)), ((unsigned long)(REC->exp)), ((unsigned long)(REC->tsp)), ((unsigned long)(REC->sig))
`))
	if err != nil {
		return err
	}
	cSyscalls["pselect6"] = *cSyscall
	cSyscall, err = parseSyscall("poll", string(`name: sys_enter_poll
ID: 730
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct pollfd * ufds;	offset:16;	size:8;	signed:0;
	field:unsigned int nfds;	offset:24;	size:8;	signed:0;
	field:int timeout_msecs;	offset:32;	size:8;	signed:0;

print fmt: "ufds: 0x%08lx, nfds: 0x%08lx, timeout_msecs: 0x%08lx", ((unsigned long)(REC->ufds)), ((unsigned long)(REC->nfds)), ((unsigned long)(REC->timeout_msecs))
`))
	if err != nil {
		return err
	}
	cSyscalls["poll"] = *cSyscall
	cSyscall, err = parseSyscall("ppoll", string(`name: sys_enter_ppoll
ID: 728
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct pollfd * ufds;	offset:16;	size:8;	signed:0;
	field:unsigned int nfds;	offset:24;	size:8;	signed:0;
	field:struct __kernel_timespec * tsp;	offset:32;	size:8;	signed:0;
	field:const sigset_t * sigmask;	offset:40;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:48;	size:8;	signed:0;

print fmt: "ufds: 0x%08lx, nfds: 0x%08lx, tsp: 0x%08lx, sigmask: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->ufds)), ((unsigned long)(REC->nfds)), ((unsigned long)(REC->tsp)), ((unsigned long)(REC->sigmask)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["ppoll"] = *cSyscall
	cSyscall, err = parseSyscall("getdents", string(`name: sys_enter_getdents
ID: 726
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:struct linux_dirent * dirent;	offset:24;	size:8;	signed:0;
	field:unsigned int count;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, dirent: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->dirent)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["getdents"] = *cSyscall
	cSyscall, err = parseSyscall("getdents64", string(`name: sys_enter_getdents64
ID: 724
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:struct linux_dirent64 * dirent;	offset:24;	size:8;	signed:0;
	field:unsigned int count;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, dirent: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->dirent)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["getdents64"] = *cSyscall
	cSyscall, err = parseSyscall("ioctl", string(`name: sys_enter_ioctl
ID: 722
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:unsigned int cmd;	offset:24;	size:8;	signed:0;
	field:unsigned long arg;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, cmd: 0x%08lx, arg: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->arg))
`))
	if err != nil {
		return err
	}
	cSyscalls["ioctl"] = *cSyscall
	cSyscall, err = parseSyscall("fcntl", string(`name: sys_enter_fcntl
ID: 720
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:unsigned int cmd;	offset:24;	size:8;	signed:0;
	field:unsigned long arg;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, cmd: 0x%08lx, arg: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->arg))
`))
	if err != nil {
		return err
	}
	cSyscalls["fcntl"] = *cSyscall
	cSyscall, err = parseSyscall("mknodat", string(`name: sys_enter_mknodat
ID: 718
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:umode_t mode;	offset:32;	size:8;	signed:0;
	field:unsigned int dev;	offset:40;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, mode: 0x%08lx, dev: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode)), ((unsigned long)(REC->dev))
`))
	if err != nil {
		return err
	}
	cSyscalls["mknodat"] = *cSyscall
	cSyscall, err = parseSyscall("mknod", string(`name: sys_enter_mknod
ID: 716
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:umode_t mode;	offset:24;	size:8;	signed:0;
	field:unsigned dev;	offset:32;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, mode: 0x%08lx, dev: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode)), ((unsigned long)(REC->dev))
`))
	if err != nil {
		return err
	}
	cSyscalls["mknod"] = *cSyscall
	cSyscall, err = parseSyscall("mkdirat", string(`name: sys_enter_mkdirat
ID: 714
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * pathname;	offset:24;	size:8;	signed:0;
	field:umode_t mode;	offset:32;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, pathname: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->pathname)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["mkdirat"] = *cSyscall
	cSyscall, err = parseSyscall("mkdir", string(`name: sys_enter_mkdir
ID: 712
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:umode_t mode;	offset:24;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["mkdir"] = *cSyscall
	cSyscall, err = parseSyscall("rmdir", string(`name: sys_enter_rmdir
ID: 710
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx", ((unsigned long)(REC->pathname))
`))
	if err != nil {
		return err
	}
	cSyscalls["rmdir"] = *cSyscall
	cSyscall, err = parseSyscall("unlinkat", string(`name: sys_enter_unlinkat
ID: 708
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * pathname;	offset:24;	size:8;	signed:0;
	field:int flag;	offset:32;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, pathname: 0x%08lx, flag: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->pathname)), ((unsigned long)(REC->flag))
`))
	if err != nil {
		return err
	}
	cSyscalls["unlinkat"] = *cSyscall
	cSyscall, err = parseSyscall("unlink", string(`name: sys_enter_unlink
ID: 706
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx", ((unsigned long)(REC->pathname))
`))
	if err != nil {
		return err
	}
	cSyscalls["unlink"] = *cSyscall
	cSyscall, err = parseSyscall("symlinkat", string(`name: sys_enter_symlinkat
ID: 704
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * oldname;	offset:16;	size:8;	signed:0;
	field:int newdfd;	offset:24;	size:8;	signed:0;
	field:const char * newname;	offset:32;	size:8;	signed:0;

print fmt: "oldname: 0x%08lx, newdfd: 0x%08lx, newname: 0x%08lx", ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newdfd)), ((unsigned long)(REC->newname))
`))
	if err != nil {
		return err
	}
	cSyscalls["symlinkat"] = *cSyscall
	cSyscall, err = parseSyscall("symlink", string(`name: sys_enter_symlink
ID: 702
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * oldname;	offset:16;	size:8;	signed:0;
	field:const char * newname;	offset:24;	size:8;	signed:0;

print fmt: "oldname: 0x%08lx, newname: 0x%08lx", ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newname))
`))
	if err != nil {
		return err
	}
	cSyscalls["symlink"] = *cSyscall
	cSyscall, err = parseSyscall("linkat", string(`name: sys_enter_linkat
ID: 700
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int olddfd;	offset:16;	size:8;	signed:0;
	field:const char * oldname;	offset:24;	size:8;	signed:0;
	field:int newdfd;	offset:32;	size:8;	signed:0;
	field:const char * newname;	offset:40;	size:8;	signed:0;
	field:int flags;	offset:48;	size:8;	signed:0;

print fmt: "olddfd: 0x%08lx, oldname: 0x%08lx, newdfd: 0x%08lx, newname: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->olddfd)), ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newdfd)), ((unsigned long)(REC->newname)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["linkat"] = *cSyscall
	cSyscall, err = parseSyscall("link", string(`name: sys_enter_link
ID: 698
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * oldname;	offset:16;	size:8;	signed:0;
	field:const char * newname;	offset:24;	size:8;	signed:0;

print fmt: "oldname: 0x%08lx, newname: 0x%08lx", ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newname))
`))
	if err != nil {
		return err
	}
	cSyscalls["link"] = *cSyscall
	cSyscall, err = parseSyscall("renameat2", string(`name: sys_enter_renameat2
ID: 696
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int olddfd;	offset:16;	size:8;	signed:0;
	field:const char * oldname;	offset:24;	size:8;	signed:0;
	field:int newdfd;	offset:32;	size:8;	signed:0;
	field:const char * newname;	offset:40;	size:8;	signed:0;
	field:unsigned int flags;	offset:48;	size:8;	signed:0;

print fmt: "olddfd: 0x%08lx, oldname: 0x%08lx, newdfd: 0x%08lx, newname: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->olddfd)), ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newdfd)), ((unsigned long)(REC->newname)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["renameat2"] = *cSyscall
	cSyscall, err = parseSyscall("renameat", string(`name: sys_enter_renameat
ID: 694
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int olddfd;	offset:16;	size:8;	signed:0;
	field:const char * oldname;	offset:24;	size:8;	signed:0;
	field:int newdfd;	offset:32;	size:8;	signed:0;
	field:const char * newname;	offset:40;	size:8;	signed:0;

print fmt: "olddfd: 0x%08lx, oldname: 0x%08lx, newdfd: 0x%08lx, newname: 0x%08lx", ((unsigned long)(REC->olddfd)), ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newdfd)), ((unsigned long)(REC->newname))
`))
	if err != nil {
		return err
	}
	cSyscalls["renameat"] = *cSyscall
	cSyscall, err = parseSyscall("rename", string(`name: sys_enter_rename
ID: 692
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * oldname;	offset:16;	size:8;	signed:0;
	field:const char * newname;	offset:24;	size:8;	signed:0;

print fmt: "oldname: 0x%08lx, newname: 0x%08lx", ((unsigned long)(REC->oldname)), ((unsigned long)(REC->newname))
`))
	if err != nil {
		return err
	}
	cSyscalls["rename"] = *cSyscall
	cSyscall, err = parseSyscall("pipe2", string(`name: sys_enter_pipe2
ID: 690
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int * fildes;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;

print fmt: "fildes: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fildes)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["pipe2"] = *cSyscall
	cSyscall, err = parseSyscall("pipe", string(`name: sys_enter_pipe
ID: 688
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int * fildes;	offset:16;	size:8;	signed:0;

print fmt: "fildes: 0x%08lx", ((unsigned long)(REC->fildes))
`))
	if err != nil {
		return err
	}
	cSyscalls["pipe"] = *cSyscall
	cSyscall, err = parseSyscall("execve", string(`name: sys_enter_execve
ID: 686
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:const char *const * argv;	offset:24;	size:8;	signed:0;
	field:const char *const * envp;	offset:32;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, argv: 0x%08lx, envp: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->argv)), ((unsigned long)(REC->envp))
`))
	if err != nil {
		return err
	}
	cSyscalls["execve"] = *cSyscall
	cSyscall, err = parseSyscall("execveat", string(`name: sys_enter_execveat
ID: 684
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:const char *const * argv;	offset:32;	size:8;	signed:0;
	field:const char *const * envp;	offset:40;	size:8;	signed:0;
	field:int flags;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, filename: 0x%08lx, argv: 0x%08lx, envp: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->argv)), ((unsigned long)(REC->envp)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["execveat"] = *cSyscall
	cSyscall, err = parseSyscall("newstat", string(`name: sys_enter_newstat
ID: 682
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:struct stat * statbuf;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, statbuf: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->statbuf))
`))
	if err != nil {
		return err
	}
	cSyscalls["newstat"] = *cSyscall
	cSyscall, err = parseSyscall("newlstat", string(`name: sys_enter_newlstat
ID: 680
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:struct stat * statbuf;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, statbuf: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->statbuf))
`))
	if err != nil {
		return err
	}
	cSyscalls["newlstat"] = *cSyscall
	cSyscall, err = parseSyscall("newfstatat", string(`name: sys_enter_newfstatat
ID: 678
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:struct stat * statbuf;	offset:32;	size:8;	signed:0;
	field:int flag;	offset:40;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, statbuf: 0x%08lx, flag: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->statbuf)), ((unsigned long)(REC->flag))
`))
	if err != nil {
		return err
	}
	cSyscalls["newfstatat"] = *cSyscall
	cSyscall, err = parseSyscall("newfstat", string(`name: sys_enter_newfstat
ID: 676
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:struct stat * statbuf;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, statbuf: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->statbuf))
`))
	if err != nil {
		return err
	}
	cSyscalls["newfstat"] = *cSyscall
	cSyscall, err = parseSyscall("readlinkat", string(`name: sys_enter_readlinkat
ID: 674
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * pathname;	offset:24;	size:8;	signed:0;
	field:char * buf;	offset:32;	size:8;	signed:0;
	field:int bufsiz;	offset:40;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, pathname: 0x%08lx, buf: 0x%08lx, bufsiz: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->pathname)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->bufsiz))
`))
	if err != nil {
		return err
	}
	cSyscalls["readlinkat"] = *cSyscall
	cSyscall, err = parseSyscall("readlink", string(`name: sys_enter_readlink
ID: 672
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * path;	offset:16;	size:8;	signed:0;
	field:char * buf;	offset:24;	size:8;	signed:0;
	field:int bufsiz;	offset:32;	size:8;	signed:0;

print fmt: "path: 0x%08lx, buf: 0x%08lx, bufsiz: 0x%08lx", ((unsigned long)(REC->path)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->bufsiz))
`))
	if err != nil {
		return err
	}
	cSyscalls["readlink"] = *cSyscall
	cSyscall, err = parseSyscall("statx", string(`name: sys_enter_statx
ID: 670
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:unsigned flags;	offset:32;	size:8;	signed:0;
	field:unsigned int mask;	offset:40;	size:8;	signed:0;
	field:struct statx * buffer;	offset:48;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, flags: 0x%08lx, mask: 0x%08lx, buffer: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->mask)), ((unsigned long)(REC->buffer))
`))
	if err != nil {
		return err
	}
	cSyscalls["statx"] = *cSyscall
	cSyscall, err = parseSyscall("lseek", string(`name: sys_enter_lseek
ID: 668
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:off_t offset;	offset:24;	size:8;	signed:0;
	field:unsigned int whence;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, offset: 0x%08lx, whence: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->whence))
`))
	if err != nil {
		return err
	}
	cSyscalls["lseek"] = *cSyscall
	cSyscall, err = parseSyscall("read", string(`name: sys_enter_read
ID: 666
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:char * buf;	offset:24;	size:8;	signed:0;
	field:size_t count;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buf: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["read"] = *cSyscall
	cSyscall, err = parseSyscall("write", string(`name: sys_enter_write
ID: 664
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:const char * buf;	offset:24;	size:8;	signed:0;
	field:size_t count;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buf: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["write"] = *cSyscall
	cSyscall, err = parseSyscall("pread64", string(`name: sys_enter_pread64
ID: 662
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:char * buf;	offset:24;	size:8;	signed:0;
	field:size_t count;	offset:32;	size:8;	signed:0;
	field:loff_t pos;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buf: 0x%08lx, count: 0x%08lx, pos: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->count)), ((unsigned long)(REC->pos))
`))
	if err != nil {
		return err
	}
	cSyscalls["pread64"] = *cSyscall
	cSyscall, err = parseSyscall("pwrite64", string(`name: sys_enter_pwrite64
ID: 660
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:const char * buf;	offset:24;	size:8;	signed:0;
	field:size_t count;	offset:32;	size:8;	signed:0;
	field:loff_t pos;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, buf: 0x%08lx, count: 0x%08lx, pos: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->count)), ((unsigned long)(REC->pos))
`))
	if err != nil {
		return err
	}
	cSyscalls["pwrite64"] = *cSyscall
	cSyscall, err = parseSyscall("readv", string(`name: sys_enter_readv
ID: 658
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["readv"] = *cSyscall
	cSyscall, err = parseSyscall("writev", string(`name: sys_enter_writev
ID: 656
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen))
`))
	if err != nil {
		return err
	}
	cSyscalls["writev"] = *cSyscall
	cSyscall, err = parseSyscall("preadv", string(`name: sys_enter_preadv
ID: 654
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;
	field:unsigned long pos_l;	offset:40;	size:8;	signed:0;
	field:unsigned long pos_h;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx, pos_l: 0x%08lx, pos_h: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->pos_l)), ((unsigned long)(REC->pos_h))
`))
	if err != nil {
		return err
	}
	cSyscalls["preadv"] = *cSyscall
	cSyscall, err = parseSyscall("preadv2", string(`name: sys_enter_preadv2
ID: 652
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;
	field:unsigned long pos_l;	offset:40;	size:8;	signed:0;
	field:unsigned long pos_h;	offset:48;	size:8;	signed:0;
	field:rwf_t flags;	offset:56;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx, pos_l: 0x%08lx, pos_h: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->pos_l)), ((unsigned long)(REC->pos_h)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["preadv2"] = *cSyscall
	cSyscall, err = parseSyscall("pwritev", string(`name: sys_enter_pwritev
ID: 650
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;
	field:unsigned long pos_l;	offset:40;	size:8;	signed:0;
	field:unsigned long pos_h;	offset:48;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx, pos_l: 0x%08lx, pos_h: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->pos_l)), ((unsigned long)(REC->pos_h))
`))
	if err != nil {
		return err
	}
	cSyscalls["pwritev"] = *cSyscall
	cSyscall, err = parseSyscall("pwritev2", string(`name: sys_enter_pwritev2
ID: 648
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long fd;	offset:16;	size:8;	signed:0;
	field:const struct iovec * vec;	offset:24;	size:8;	signed:0;
	field:unsigned long vlen;	offset:32;	size:8;	signed:0;
	field:unsigned long pos_l;	offset:40;	size:8;	signed:0;
	field:unsigned long pos_h;	offset:48;	size:8;	signed:0;
	field:rwf_t flags;	offset:56;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, vec: 0x%08lx, vlen: 0x%08lx, pos_l: 0x%08lx, pos_h: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->vec)), ((unsigned long)(REC->vlen)), ((unsigned long)(REC->pos_l)), ((unsigned long)(REC->pos_h)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["pwritev2"] = *cSyscall
	cSyscall, err = parseSyscall("sendfile64", string(`name: sys_enter_sendfile64
ID: 646
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int out_fd;	offset:16;	size:8;	signed:0;
	field:int in_fd;	offset:24;	size:8;	signed:0;
	field:loff_t * offset;	offset:32;	size:8;	signed:0;
	field:size_t count;	offset:40;	size:8;	signed:0;

print fmt: "out_fd: 0x%08lx, in_fd: 0x%08lx, offset: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->out_fd)), ((unsigned long)(REC->in_fd)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["sendfile64"] = *cSyscall
	cSyscall, err = parseSyscall("copy_file_range", string(`name: sys_enter_copy_file_range
ID: 644
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd_in;	offset:16;	size:8;	signed:0;
	field:loff_t * off_in;	offset:24;	size:8;	signed:0;
	field:int fd_out;	offset:32;	size:8;	signed:0;
	field:loff_t * off_out;	offset:40;	size:8;	signed:0;
	field:size_t len;	offset:48;	size:8;	signed:0;
	field:unsigned int flags;	offset:56;	size:8;	signed:0;

print fmt: "fd_in: 0x%08lx, off_in: 0x%08lx, fd_out: 0x%08lx, off_out: 0x%08lx, len: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd_in)), ((unsigned long)(REC->off_in)), ((unsigned long)(REC->fd_out)), ((unsigned long)(REC->off_out)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["copy_file_range"] = *cSyscall
	cSyscall, err = parseSyscall("truncate", string(`name: sys_enter_truncate
ID: 642
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * path;	offset:16;	size:8;	signed:0;
	field:long length;	offset:24;	size:8;	signed:0;

print fmt: "path: 0x%08lx, length: 0x%08lx", ((unsigned long)(REC->path)), ((unsigned long)(REC->length))
`))
	if err != nil {
		return err
	}
	cSyscalls["truncate"] = *cSyscall
	cSyscall, err = parseSyscall("ftruncate", string(`name: sys_enter_ftruncate
ID: 640
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:unsigned long length;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, length: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->length))
`))
	if err != nil {
		return err
	}
	cSyscalls["ftruncate"] = *cSyscall
	cSyscall, err = parseSyscall("fallocate", string(`name: sys_enter_fallocate
ID: 638
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int mode;	offset:24;	size:8;	signed:0;
	field:loff_t offset;	offset:32;	size:8;	signed:0;
	field:loff_t len;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, mode: 0x%08lx, offset: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->mode)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["fallocate"] = *cSyscall
	cSyscall, err = parseSyscall("faccessat", string(`name: sys_enter_faccessat
ID: 636
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:int mode;	offset:32;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["faccessat"] = *cSyscall
	cSyscall, err = parseSyscall("access", string(`name: sys_enter_access
ID: 634
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:int mode;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["access"] = *cSyscall
	cSyscall, err = parseSyscall("chdir", string(`name: sys_enter_chdir
ID: 632
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;

print fmt: "filename: 0x%08lx", ((unsigned long)(REC->filename))
`))
	if err != nil {
		return err
	}
	cSyscalls["chdir"] = *cSyscall
	cSyscall, err = parseSyscall("fchdir", string(`name: sys_enter_fchdir
ID: 630
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;

print fmt: "fd: 0x%08lx", ((unsigned long)(REC->fd))
`))
	if err != nil {
		return err
	}
	cSyscalls["fchdir"] = *cSyscall
	cSyscall, err = parseSyscall("chroot", string(`name: sys_enter_chroot
ID: 628
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;

print fmt: "filename: 0x%08lx", ((unsigned long)(REC->filename))
`))
	if err != nil {
		return err
	}
	cSyscalls["chroot"] = *cSyscall
	cSyscall, err = parseSyscall("fchmod", string(`name: sys_enter_fchmod
ID: 626
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:umode_t mode;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["fchmod"] = *cSyscall
	cSyscall, err = parseSyscall("fchmodat", string(`name: sys_enter_fchmodat
ID: 624
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:umode_t mode;	offset:32;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["fchmodat"] = *cSyscall
	cSyscall, err = parseSyscall("chmod", string(`name: sys_enter_chmod
ID: 622
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:umode_t mode;	offset:24;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["chmod"] = *cSyscall
	cSyscall, err = parseSyscall("fchownat", string(`name: sys_enter_fchownat
ID: 620
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:uid_t user;	offset:32;	size:8;	signed:0;
	field:gid_t group;	offset:40;	size:8;	signed:0;
	field:int flag;	offset:48;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, user: 0x%08lx, group: 0x%08lx, flag: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->user)), ((unsigned long)(REC->group)), ((unsigned long)(REC->flag))
`))
	if err != nil {
		return err
	}
	cSyscalls["fchownat"] = *cSyscall
	cSyscall, err = parseSyscall("chown", string(`name: sys_enter_chown
ID: 618
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:uid_t user;	offset:24;	size:8;	signed:0;
	field:gid_t group;	offset:32;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, user: 0x%08lx, group: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->user)), ((unsigned long)(REC->group))
`))
	if err != nil {
		return err
	}
	cSyscalls["chown"] = *cSyscall
	cSyscall, err = parseSyscall("lchown", string(`name: sys_enter_lchown
ID: 616
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:uid_t user;	offset:24;	size:8;	signed:0;
	field:gid_t group;	offset:32;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, user: 0x%08lx, group: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->user)), ((unsigned long)(REC->group))
`))
	if err != nil {
		return err
	}
	cSyscalls["lchown"] = *cSyscall
	cSyscall, err = parseSyscall("fchown", string(`name: sys_enter_fchown
ID: 614
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;
	field:uid_t user;	offset:24;	size:8;	signed:0;
	field:gid_t group;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, user: 0x%08lx, group: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->user)), ((unsigned long)(REC->group))
`))
	if err != nil {
		return err
	}
	cSyscalls["fchown"] = *cSyscall
	cSyscall, err = parseSyscall("open", string(`name: sys_enter_open
ID: 612
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * filename;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;
	field:umode_t mode;	offset:32;	size:8;	signed:0;

print fmt: "filename: 0x%08lx, flags: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->filename)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["open"] = *cSyscall
	cSyscall, err = parseSyscall("openat", string(`name: sys_enter_openat
ID: 610
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int dfd;	offset:16;	size:8;	signed:0;
	field:const char * filename;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;
	field:umode_t mode;	offset:40;	size:8;	signed:0;

print fmt: "dfd: 0x%08lx, filename: 0x%08lx, flags: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->dfd)), ((unsigned long)(REC->filename)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["openat"] = *cSyscall
	cSyscall, err = parseSyscall("creat", string(`name: sys_enter_creat
ID: 608
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * pathname;	offset:16;	size:8;	signed:0;
	field:umode_t mode;	offset:24;	size:8;	signed:0;

print fmt: "pathname: 0x%08lx, mode: 0x%08lx", ((unsigned long)(REC->pathname)), ((unsigned long)(REC->mode))
`))
	if err != nil {
		return err
	}
	cSyscalls["creat"] = *cSyscall
	cSyscall, err = parseSyscall("close", string(`name: sys_enter_close
ID: 606
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int fd;	offset:16;	size:8;	signed:0;

print fmt: "fd: 0x%08lx", ((unsigned long)(REC->fd))
`))
	if err != nil {
		return err
	}
	cSyscalls["close"] = *cSyscall
	cSyscall, err = parseSyscall("vhangup", string(`name: sys_enter_vhangup
ID: 604
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["vhangup"] = *cSyscall
	cSyscall, err = parseSyscall("memfd_create", string(`name: sys_enter_memfd_create
ID: 602
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * uname;	offset:16;	size:8;	signed:0;
	field:unsigned int flags;	offset:24;	size:8;	signed:0;

print fmt: "uname: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->uname)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["memfd_create"] = *cSyscall
	cSyscall, err = parseSyscall("move_pages", string(`name: sys_enter_move_pages
ID: 592
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:unsigned long nr_pages;	offset:24;	size:8;	signed:0;
	field:const void * * pages;	offset:32;	size:8;	signed:0;
	field:const int * nodes;	offset:40;	size:8;	signed:0;
	field:int * status;	offset:48;	size:8;	signed:0;
	field:int flags;	offset:56;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, nr_pages: 0x%08lx, pages: 0x%08lx, nodes: 0x%08lx, status: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->nr_pages)), ((unsigned long)(REC->pages)), ((unsigned long)(REC->nodes)), ((unsigned long)(REC->status)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["move_pages"] = *cSyscall
	cSyscall, err = parseSyscall("mbind", string(`name: sys_enter_mbind
ID: 590
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:unsigned long len;	offset:24;	size:8;	signed:0;
	field:unsigned long mode;	offset:32;	size:8;	signed:0;
	field:const unsigned long * nmask;	offset:40;	size:8;	signed:0;
	field:unsigned long maxnode;	offset:48;	size:8;	signed:0;
	field:unsigned int flags;	offset:56;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, mode: 0x%08lx, nmask: 0x%08lx, maxnode: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->mode)), ((unsigned long)(REC->nmask)), ((unsigned long)(REC->maxnode)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["mbind"] = *cSyscall
	cSyscall, err = parseSyscall("set_mempolicy", string(`name: sys_enter_set_mempolicy
ID: 588
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int mode;	offset:16;	size:8;	signed:0;
	field:const unsigned long * nmask;	offset:24;	size:8;	signed:0;
	field:unsigned long maxnode;	offset:32;	size:8;	signed:0;

print fmt: "mode: 0x%08lx, nmask: 0x%08lx, maxnode: 0x%08lx", ((unsigned long)(REC->mode)), ((unsigned long)(REC->nmask)), ((unsigned long)(REC->maxnode))
`))
	if err != nil {
		return err
	}
	cSyscalls["set_mempolicy"] = *cSyscall
	cSyscall, err = parseSyscall("migrate_pages", string(`name: sys_enter_migrate_pages
ID: 586
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:unsigned long maxnode;	offset:24;	size:8;	signed:0;
	field:const unsigned long * old_nodes;	offset:32;	size:8;	signed:0;
	field:const unsigned long * new_nodes;	offset:40;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, maxnode: 0x%08lx, old_nodes: 0x%08lx, new_nodes: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->maxnode)), ((unsigned long)(REC->old_nodes)), ((unsigned long)(REC->new_nodes))
`))
	if err != nil {
		return err
	}
	cSyscalls["migrate_pages"] = *cSyscall
	cSyscall, err = parseSyscall("get_mempolicy", string(`name: sys_enter_get_mempolicy
ID: 584
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int * policy;	offset:16;	size:8;	signed:0;
	field:unsigned long * nmask;	offset:24;	size:8;	signed:0;
	field:unsigned long maxnode;	offset:32;	size:8;	signed:0;
	field:unsigned long addr;	offset:40;	size:8;	signed:0;
	field:unsigned long flags;	offset:48;	size:8;	signed:0;

print fmt: "policy: 0x%08lx, nmask: 0x%08lx, maxnode: 0x%08lx, addr: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->policy)), ((unsigned long)(REC->nmask)), ((unsigned long)(REC->maxnode)), ((unsigned long)(REC->addr)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["get_mempolicy"] = *cSyscall
	cSyscall, err = parseSyscall("swapoff", string(`name: sys_enter_swapoff
ID: 582
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * specialfile;	offset:16;	size:8;	signed:0;

print fmt: "specialfile: 0x%08lx", ((unsigned long)(REC->specialfile))
`))
	if err != nil {
		return err
	}
	cSyscalls["swapoff"] = *cSyscall
	cSyscall, err = parseSyscall("swapon", string(`name: sys_enter_swapon
ID: 580
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * specialfile;	offset:16;	size:8;	signed:0;
	field:int swap_flags;	offset:24;	size:8;	signed:0;

print fmt: "specialfile: 0x%08lx, swap_flags: 0x%08lx", ((unsigned long)(REC->specialfile)), ((unsigned long)(REC->swap_flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["swapon"] = *cSyscall
	cSyscall, err = parseSyscall("madvise", string(`name: sys_enter_madvise
ID: 578
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len_in;	offset:24;	size:8;	signed:0;
	field:int behavior;	offset:32;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len_in: 0x%08lx, behavior: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len_in)), ((unsigned long)(REC->behavior))
`))
	if err != nil {
		return err
	}
	cSyscalls["madvise"] = *cSyscall
	cSyscall, err = parseSyscall("process_vm_readv", string(`name: sys_enter_process_vm_readv
ID: 576
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:const struct iovec * lvec;	offset:24;	size:8;	signed:0;
	field:unsigned long liovcnt;	offset:32;	size:8;	signed:0;
	field:const struct iovec * rvec;	offset:40;	size:8;	signed:0;
	field:unsigned long riovcnt;	offset:48;	size:8;	signed:0;
	field:unsigned long flags;	offset:56;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, lvec: 0x%08lx, liovcnt: 0x%08lx, rvec: 0x%08lx, riovcnt: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->lvec)), ((unsigned long)(REC->liovcnt)), ((unsigned long)(REC->rvec)), ((unsigned long)(REC->riovcnt)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["process_vm_readv"] = *cSyscall
	cSyscall, err = parseSyscall("process_vm_writev", string(`name: sys_enter_process_vm_writev
ID: 574
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:const struct iovec * lvec;	offset:24;	size:8;	signed:0;
	field:unsigned long liovcnt;	offset:32;	size:8;	signed:0;
	field:const struct iovec * rvec;	offset:40;	size:8;	signed:0;
	field:unsigned long riovcnt;	offset:48;	size:8;	signed:0;
	field:unsigned long flags;	offset:56;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, lvec: 0x%08lx, liovcnt: 0x%08lx, rvec: 0x%08lx, riovcnt: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->lvec)), ((unsigned long)(REC->liovcnt)), ((unsigned long)(REC->rvec)), ((unsigned long)(REC->riovcnt)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["process_vm_writev"] = *cSyscall
	cSyscall, err = parseSyscall("msync", string(`name: sys_enter_msync
ID: 572
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["msync"] = *cSyscall
	cSyscall, err = parseSyscall("mremap", string(`name: sys_enter_mremap
ID: 570
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long addr;	offset:16;	size:8;	signed:0;
	field:unsigned long old_len;	offset:24;	size:8;	signed:0;
	field:unsigned long new_len;	offset:32;	size:8;	signed:0;
	field:unsigned long flags;	offset:40;	size:8;	signed:0;
	field:unsigned long new_addr;	offset:48;	size:8;	signed:0;

print fmt: "addr: 0x%08lx, old_len: 0x%08lx, new_len: 0x%08lx, flags: 0x%08lx, new_addr: 0x%08lx", ((unsigned long)(REC->addr)), ((unsigned long)(REC->old_len)), ((unsigned long)(REC->new_len)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->new_addr))
`))
	if err != nil {
		return err
	}
	cSyscalls["mremap"] = *cSyscall
	cSyscall, err = parseSyscall("mprotect", string(`name: sys_enter_mprotect
ID: 568
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;
	field:unsigned long prot;	offset:32;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, prot: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->prot))
`))
	if err != nil {
		return err
	}
	cSyscalls["mprotect"] = *cSyscall
	cSyscall, err = parseSyscall("pkey_mprotect", string(`name: sys_enter_pkey_mprotect
ID: 566
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;
	field:unsigned long prot;	offset:32;	size:8;	signed:0;
	field:int pkey;	offset:40;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, prot: 0x%08lx, pkey: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->prot)), ((unsigned long)(REC->pkey))
`))
	if err != nil {
		return err
	}
	cSyscalls["pkey_mprotect"] = *cSyscall
	cSyscall, err = parseSyscall("pkey_alloc", string(`name: sys_enter_pkey_alloc
ID: 564
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long flags;	offset:16;	size:8;	signed:0;
	field:unsigned long init_val;	offset:24;	size:8;	signed:0;

print fmt: "flags: 0x%08lx, init_val: 0x%08lx", ((unsigned long)(REC->flags)), ((unsigned long)(REC->init_val))
`))
	if err != nil {
		return err
	}
	cSyscalls["pkey_alloc"] = *cSyscall
	cSyscall, err = parseSyscall("pkey_free", string(`name: sys_enter_pkey_free
ID: 562
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int pkey;	offset:16;	size:8;	signed:0;

print fmt: "pkey: 0x%08lx", ((unsigned long)(REC->pkey))
`))
	if err != nil {
		return err
	}
	cSyscalls["pkey_free"] = *cSyscall
	cSyscall, err = parseSyscall("brk", string(`name: sys_enter_brk
ID: 560
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long brk;	offset:16;	size:8;	signed:0;

print fmt: "brk: 0x%08lx", ((unsigned long)(REC->brk))
`))
	if err != nil {
		return err
	}
	cSyscalls["brk"] = *cSyscall
	cSyscall, err = parseSyscall("munmap", string(`name: sys_enter_munmap
ID: 558
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long addr;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;

print fmt: "addr: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->addr)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["munmap"] = *cSyscall
	cSyscall, err = parseSyscall("remap_file_pages", string(`name: sys_enter_remap_file_pages
ID: 556
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:unsigned long size;	offset:24;	size:8;	signed:0;
	field:unsigned long prot;	offset:32;	size:8;	signed:0;
	field:unsigned long pgoff;	offset:40;	size:8;	signed:0;
	field:unsigned long flags;	offset:48;	size:8;	signed:0;

print fmt: "start: 0x%08lx, size: 0x%08lx, prot: 0x%08lx, pgoff: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->size)), ((unsigned long)(REC->prot)), ((unsigned long)(REC->pgoff)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["remap_file_pages"] = *cSyscall
	cSyscall, err = parseSyscall("mlock", string(`name: sys_enter_mlock
ID: 554
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["mlock"] = *cSyscall
	cSyscall, err = parseSyscall("mlock2", string(`name: sys_enter_mlock2
ID: 552
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["mlock2"] = *cSyscall
	cSyscall, err = parseSyscall("munlock", string(`name: sys_enter_munlock
ID: 550
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["munlock"] = *cSyscall
	cSyscall, err = parseSyscall("mlockall", string(`name: sys_enter_mlockall
ID: 548
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int flags;	offset:16;	size:8;	signed:0;

print fmt: "flags: 0x%08lx", ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["mlockall"] = *cSyscall
	cSyscall, err = parseSyscall("munlockall", string(`name: sys_enter_munlockall
ID: 546
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["munlockall"] = *cSyscall
	cSyscall, err = parseSyscall("mincore", string(`name: sys_enter_mincore
ID: 544
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long start;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;
	field:unsigned char * vec;	offset:32;	size:8;	signed:0;

print fmt: "start: 0x%08lx, len: 0x%08lx, vec: 0x%08lx", ((unsigned long)(REC->start)), ((unsigned long)(REC->len)), ((unsigned long)(REC->vec))
`))
	if err != nil {
		return err
	}
	cSyscalls["mincore"] = *cSyscall
	cSyscall, err = parseSyscall("readahead", string(`name: sys_enter_readahead
ID: 493
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:loff_t offset;	offset:24;	size:8;	signed:0;
	field:size_t count;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, offset: 0x%08lx, count: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->count))
`))
	if err != nil {
		return err
	}
	cSyscalls["readahead"] = *cSyscall
	cSyscall, err = parseSyscall("fadvise64", string(`name: sys_enter_fadvise64
ID: 491
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:loff_t offset;	offset:24;	size:8;	signed:0;
	field:size_t len;	offset:32;	size:8;	signed:0;
	field:int advice;	offset:40;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, offset: 0x%08lx, len: 0x%08lx, advice: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->offset)), ((unsigned long)(REC->len)), ((unsigned long)(REC->advice))
`))
	if err != nil {
		return err
	}
	cSyscalls["fadvise64"] = *cSyscall
	cSyscall, err = parseSyscall("rseq", string(`name: sys_enter_rseq
ID: 475
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct rseq * rseq;	offset:16;	size:8;	signed:0;
	field:u32 rseq_len;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;
	field:u32 sig;	offset:40;	size:8;	signed:0;

print fmt: "rseq: 0x%08lx, rseq_len: 0x%08lx, flags: 0x%08lx, sig: 0x%08lx", ((unsigned long)(REC->rseq)), ((unsigned long)(REC->rseq_len)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->sig))
`))
	if err != nil {
		return err
	}
	cSyscalls["rseq"] = *cSyscall
	cSyscall, err = parseSyscall("perf_event_open", string(`name: sys_enter_perf_event_open
ID: 471
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct perf_event_attr * attr_uptr;	offset:16;	size:8;	signed:0;
	field:pid_t pid;	offset:24;	size:8;	signed:0;
	field:int cpu;	offset:32;	size:8;	signed:0;
	field:int group_fd;	offset:40;	size:8;	signed:0;
	field:unsigned long flags;	offset:48;	size:8;	signed:0;

print fmt: "attr_uptr: 0x%08lx, pid: 0x%08lx, cpu: 0x%08lx, group_fd: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->attr_uptr)), ((unsigned long)(REC->pid)), ((unsigned long)(REC->cpu)), ((unsigned long)(REC->group_fd)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["perf_event_open"] = *cSyscall
	cSyscall, err = parseSyscall("bpf", string(`name: sys_enter_bpf
ID: 469
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int cmd;	offset:16;	size:8;	signed:0;
	field:union bpf_attr * uattr;	offset:24;	size:8;	signed:0;
	field:unsigned int size;	offset:32;	size:8;	signed:0;

print fmt: "cmd: 0x%08lx, uattr: 0x%08lx, size: 0x%08lx", ((unsigned long)(REC->cmd)), ((unsigned long)(REC->uattr)), ((unsigned long)(REC->size))
`))
	if err != nil {
		return err
	}
	cSyscalls["bpf"] = *cSyscall
	cSyscall, err = parseSyscall("seccomp", string(`name: sys_enter_seccomp
ID: 432
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int op;	offset:16;	size:8;	signed:0;
	field:unsigned int flags;	offset:24;	size:8;	signed:0;
	field:void * uargs;	offset:32;	size:8;	signed:0;

print fmt: "op: 0x%08lx, flags: 0x%08lx, uargs: 0x%08lx", ((unsigned long)(REC->op)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->uargs))
`))
	if err != nil {
		return err
	}
	cSyscalls["seccomp"] = *cSyscall
	cSyscall, err = parseSyscall("kexec_file_load", string(`name: sys_enter_kexec_file_load
ID: 421
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int kernel_fd;	offset:16;	size:8;	signed:0;
	field:int initrd_fd;	offset:24;	size:8;	signed:0;
	field:unsigned long cmdline_len;	offset:32;	size:8;	signed:0;
	field:const char * cmdline_ptr;	offset:40;	size:8;	signed:0;
	field:unsigned long flags;	offset:48;	size:8;	signed:0;

print fmt: "kernel_fd: 0x%08lx, initrd_fd: 0x%08lx, cmdline_len: 0x%08lx, cmdline_ptr: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->kernel_fd)), ((unsigned long)(REC->initrd_fd)), ((unsigned long)(REC->cmdline_len)), ((unsigned long)(REC->cmdline_ptr)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["kexec_file_load"] = *cSyscall
	cSyscall, err = parseSyscall("kexec_load", string(`name: sys_enter_kexec_load
ID: 419
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long entry;	offset:16;	size:8;	signed:0;
	field:unsigned long nr_segments;	offset:24;	size:8;	signed:0;
	field:struct kexec_segment * segments;	offset:32;	size:8;	signed:0;
	field:unsigned long flags;	offset:40;	size:8;	signed:0;

print fmt: "entry: 0x%08lx, nr_segments: 0x%08lx, segments: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->entry)), ((unsigned long)(REC->nr_segments)), ((unsigned long)(REC->segments)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["kexec_load"] = *cSyscall
	cSyscall, err = parseSyscall("acct", string(`name: sys_enter_acct
ID: 417
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * name;	offset:16;	size:8;	signed:0;

print fmt: "name: 0x%08lx", ((unsigned long)(REC->name))
`))
	if err != nil {
		return err
	}
	cSyscalls["acct"] = *cSyscall
	cSyscall, err = parseSyscall("delete_module", string(`name: sys_enter_delete_module
ID: 410
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const char * name_user;	offset:16;	size:8;	signed:0;
	field:unsigned int flags;	offset:24;	size:8;	signed:0;

print fmt: "name_user: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->name_user)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["delete_module"] = *cSyscall
	cSyscall, err = parseSyscall("init_module", string(`name: sys_enter_init_module
ID: 408
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:void * umod;	offset:16;	size:8;	signed:0;
	field:unsigned long len;	offset:24;	size:8;	signed:0;
	field:const char * uargs;	offset:32;	size:8;	signed:0;

print fmt: "umod: 0x%08lx, len: 0x%08lx, uargs: 0x%08lx", ((unsigned long)(REC->umod)), ((unsigned long)(REC->len)), ((unsigned long)(REC->uargs))
`))
	if err != nil {
		return err
	}
	cSyscalls["init_module"] = *cSyscall
	cSyscall, err = parseSyscall("finit_module", string(`name: sys_enter_finit_module
ID: 406
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:const char * uargs;	offset:24;	size:8;	signed:0;
	field:int flags;	offset:32;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, uargs: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->uargs)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["finit_module"] = *cSyscall
	cSyscall, err = parseSyscall("set_robust_list", string(`name: sys_enter_set_robust_list
ID: 404
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct robust_list_head * head;	offset:16;	size:8;	signed:0;
	field:size_t len;	offset:24;	size:8;	signed:0;

print fmt: "head: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->head)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["set_robust_list"] = *cSyscall
	cSyscall, err = parseSyscall("get_robust_list", string(`name: sys_enter_get_robust_list
ID: 402
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int pid;	offset:16;	size:8;	signed:0;
	field:struct robust_list_head * * head_ptr;	offset:24;	size:8;	signed:0;
	field:size_t * len_ptr;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, head_ptr: 0x%08lx, len_ptr: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->head_ptr)), ((unsigned long)(REC->len_ptr))
`))
	if err != nil {
		return err
	}
	cSyscalls["get_robust_list"] = *cSyscall
	cSyscall, err = parseSyscall("futex", string(`name: sys_enter_futex
ID: 400
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:u32 * uaddr;	offset:16;	size:8;	signed:0;
	field:int op;	offset:24;	size:8;	signed:0;
	field:u32 val;	offset:32;	size:8;	signed:0;
	field:struct __kernel_timespec * utime;	offset:40;	size:8;	signed:0;
	field:u32 * uaddr2;	offset:48;	size:8;	signed:0;
	field:u32 val3;	offset:56;	size:8;	signed:0;

print fmt: "uaddr: 0x%08lx, op: 0x%08lx, val: 0x%08lx, utime: 0x%08lx, uaddr2: 0x%08lx, val3: 0x%08lx", ((unsigned long)(REC->uaddr)), ((unsigned long)(REC->op)), ((unsigned long)(REC->val)), ((unsigned long)(REC->utime)), ((unsigned long)(REC->uaddr2)), ((unsigned long)(REC->val3))
`))
	if err != nil {
		return err
	}
	cSyscalls["futex"] = *cSyscall
	cSyscall, err = parseSyscall("getitimer", string(`name: sys_enter_getitimer
ID: 398
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:struct itimerval * value;	offset:24;	size:8;	signed:0;

print fmt: "which: 0x%08lx, value: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->value))
`))
	if err != nil {
		return err
	}
	cSyscalls["getitimer"] = *cSyscall
	cSyscall, err = parseSyscall("alarm", string(`name: sys_enter_alarm
ID: 396
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int seconds;	offset:16;	size:8;	signed:0;

print fmt: "seconds: 0x%08lx", ((unsigned long)(REC->seconds))
`))
	if err != nil {
		return err
	}
	cSyscalls["alarm"] = *cSyscall
	cSyscall, err = parseSyscall("setitimer", string(`name: sys_enter_setitimer
ID: 394
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:struct itimerval * value;	offset:24;	size:8;	signed:0;
	field:struct itimerval * ovalue;	offset:32;	size:8;	signed:0;

print fmt: "which: 0x%08lx, value: 0x%08lx, ovalue: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->value)), ((unsigned long)(REC->ovalue))
`))
	if err != nil {
		return err
	}
	cSyscalls["setitimer"] = *cSyscall
	cSyscall, err = parseSyscall("timer_create", string(`name: sys_enter_timer_create
ID: 392
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:struct sigevent * timer_event_spec;	offset:24;	size:8;	signed:0;
	field:timer_t * created_timer_id;	offset:32;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, timer_event_spec: 0x%08lx, created_timer_id: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->timer_event_spec)), ((unsigned long)(REC->created_timer_id))
`))
	if err != nil {
		return err
	}
	cSyscalls["timer_create"] = *cSyscall
	cSyscall, err = parseSyscall("timer_gettime", string(`name: sys_enter_timer_gettime
ID: 390
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:timer_t timer_id;	offset:16;	size:8;	signed:0;
	field:struct __kernel_itimerspec * setting;	offset:24;	size:8;	signed:0;

print fmt: "timer_id: 0x%08lx, setting: 0x%08lx", ((unsigned long)(REC->timer_id)), ((unsigned long)(REC->setting))
`))
	if err != nil {
		return err
	}
	cSyscalls["timer_gettime"] = *cSyscall
	cSyscall, err = parseSyscall("timer_getoverrun", string(`name: sys_enter_timer_getoverrun
ID: 388
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:timer_t timer_id;	offset:16;	size:8;	signed:0;

print fmt: "timer_id: 0x%08lx", ((unsigned long)(REC->timer_id))
`))
	if err != nil {
		return err
	}
	cSyscalls["timer_getoverrun"] = *cSyscall
	cSyscall, err = parseSyscall("timer_settime", string(`name: sys_enter_timer_settime
ID: 386
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:timer_t timer_id;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;
	field:const struct __kernel_itimerspec * new_setting;	offset:32;	size:8;	signed:0;
	field:struct __kernel_itimerspec * old_setting;	offset:40;	size:8;	signed:0;

print fmt: "timer_id: 0x%08lx, flags: 0x%08lx, new_setting: 0x%08lx, old_setting: 0x%08lx", ((unsigned long)(REC->timer_id)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->new_setting)), ((unsigned long)(REC->old_setting))
`))
	if err != nil {
		return err
	}
	cSyscalls["timer_settime"] = *cSyscall
	cSyscall, err = parseSyscall("timer_delete", string(`name: sys_enter_timer_delete
ID: 384
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:timer_t timer_id;	offset:16;	size:8;	signed:0;

print fmt: "timer_id: 0x%08lx", ((unsigned long)(REC->timer_id))
`))
	if err != nil {
		return err
	}
	cSyscalls["timer_delete"] = *cSyscall
	cSyscall, err = parseSyscall("clock_settime", string(`name: sys_enter_clock_settime
ID: 382
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:const struct __kernel_timespec * tp;	offset:24;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, tp: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->tp))
`))
	if err != nil {
		return err
	}
	cSyscalls["clock_settime"] = *cSyscall
	cSyscall, err = parseSyscall("clock_gettime", string(`name: sys_enter_clock_gettime
ID: 380
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:struct __kernel_timespec * tp;	offset:24;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, tp: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->tp))
`))
	if err != nil {
		return err
	}
	cSyscalls["clock_gettime"] = *cSyscall
	cSyscall, err = parseSyscall("clock_adjtime", string(`name: sys_enter_clock_adjtime
ID: 378
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:struct __kernel_timex * utx;	offset:24;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, utx: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->utx))
`))
	if err != nil {
		return err
	}
	cSyscalls["clock_adjtime"] = *cSyscall
	cSyscall, err = parseSyscall("clock_getres", string(`name: sys_enter_clock_getres
ID: 376
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:struct __kernel_timespec * tp;	offset:24;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, tp: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->tp))
`))
	if err != nil {
		return err
	}
	cSyscalls["clock_getres"] = *cSyscall
	cSyscall, err = parseSyscall("clock_nanosleep", string(`name: sys_enter_clock_nanosleep
ID: 374
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const clockid_t which_clock;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;
	field:const struct __kernel_timespec * rqtp;	offset:32;	size:8;	signed:0;
	field:struct __kernel_timespec * rmtp;	offset:40;	size:8;	signed:0;

print fmt: "which_clock: 0x%08lx, flags: 0x%08lx, rqtp: 0x%08lx, rmtp: 0x%08lx", ((unsigned long)(REC->which_clock)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->rqtp)), ((unsigned long)(REC->rmtp))
`))
	if err != nil {
		return err
	}
	cSyscalls["clock_nanosleep"] = *cSyscall
	cSyscall, err = parseSyscall("nanosleep", string(`name: sys_enter_nanosleep
ID: 368
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct __kernel_timespec * rqtp;	offset:16;	size:8;	signed:0;
	field:struct __kernel_timespec * rmtp;	offset:24;	size:8;	signed:0;

print fmt: "rqtp: 0x%08lx, rmtp: 0x%08lx", ((unsigned long)(REC->rqtp)), ((unsigned long)(REC->rmtp))
`))
	if err != nil {
		return err
	}
	cSyscalls["nanosleep"] = *cSyscall
	cSyscall, err = parseSyscall("time", string(`name: sys_enter_time
ID: 353
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:time_t * tloc;	offset:16;	size:8;	signed:0;

print fmt: "tloc: 0x%08lx", ((unsigned long)(REC->tloc))
`))
	if err != nil {
		return err
	}
	cSyscalls["time"] = *cSyscall
	cSyscall, err = parseSyscall("gettimeofday", string(`name: sys_enter_gettimeofday
ID: 351
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct timeval * tv;	offset:16;	size:8;	signed:0;
	field:struct timezone * tz;	offset:24;	size:8;	signed:0;

print fmt: "tv: 0x%08lx, tz: 0x%08lx", ((unsigned long)(REC->tv)), ((unsigned long)(REC->tz))
`))
	if err != nil {
		return err
	}
	cSyscalls["gettimeofday"] = *cSyscall
	cSyscall, err = parseSyscall("settimeofday", string(`name: sys_enter_settimeofday
ID: 349
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct timeval * tv;	offset:16;	size:8;	signed:0;
	field:struct timezone * tz;	offset:24;	size:8;	signed:0;

print fmt: "tv: 0x%08lx, tz: 0x%08lx", ((unsigned long)(REC->tv)), ((unsigned long)(REC->tz))
`))
	if err != nil {
		return err
	}
	cSyscalls["settimeofday"] = *cSyscall
	cSyscall, err = parseSyscall("adjtimex", string(`name: sys_enter_adjtimex
ID: 347
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct __kernel_timex * txc_p;	offset:16;	size:8;	signed:0;

print fmt: "txc_p: 0x%08lx", ((unsigned long)(REC->txc_p))
`))
	if err != nil {
		return err
	}
	cSyscalls["adjtimex"] = *cSyscall
	cSyscall, err = parseSyscall("kcmp", string(`name: sys_enter_kcmp
ID: 345
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid1;	offset:16;	size:8;	signed:0;
	field:pid_t pid2;	offset:24;	size:8;	signed:0;
	field:int type;	offset:32;	size:8;	signed:0;
	field:unsigned long idx1;	offset:40;	size:8;	signed:0;
	field:unsigned long idx2;	offset:48;	size:8;	signed:0;

print fmt: "pid1: 0x%08lx, pid2: 0x%08lx, type: 0x%08lx, idx1: 0x%08lx, idx2: 0x%08lx", ((unsigned long)(REC->pid1)), ((unsigned long)(REC->pid2)), ((unsigned long)(REC->type)), ((unsigned long)(REC->idx1)), ((unsigned long)(REC->idx2))
`))
	if err != nil {
		return err
	}
	cSyscalls["kcmp"] = *cSyscall
	cSyscall, err = parseSyscall("syslog", string(`name: sys_enter_syslog
ID: 328
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int type;	offset:16;	size:8;	signed:0;
	field:char * buf;	offset:24;	size:8;	signed:0;
	field:int len;	offset:32;	size:8;	signed:0;

print fmt: "type: 0x%08lx, buf: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->type)), ((unsigned long)(REC->buf)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["syslog"] = *cSyscall
	cSyscall, err = parseSyscall("membarrier", string(`name: sys_enter_membarrier
ID: 326
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int cmd;	offset:16;	size:8;	signed:0;
	field:int flags;	offset:24;	size:8;	signed:0;

print fmt: "cmd: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->cmd)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["membarrier"] = *cSyscall
	cSyscall, err = parseSyscall("sched_setscheduler", string(`name: sys_enter_sched_setscheduler
ID: 301
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:int policy;	offset:24;	size:8;	signed:0;
	field:struct sched_param * param;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, policy: 0x%08lx, param: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->policy)), ((unsigned long)(REC->param))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_setscheduler"] = *cSyscall
	cSyscall, err = parseSyscall("sched_setparam", string(`name: sys_enter_sched_setparam
ID: 299
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:struct sched_param * param;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, param: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->param))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_setparam"] = *cSyscall
	cSyscall, err = parseSyscall("sched_setattr", string(`name: sys_enter_sched_setattr
ID: 297
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:struct sched_attr * uattr;	offset:24;	size:8;	signed:0;
	field:unsigned int flags;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, uattr: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->uattr)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_setattr"] = *cSyscall
	cSyscall, err = parseSyscall("sched_getscheduler", string(`name: sys_enter_sched_getscheduler
ID: 295
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;

print fmt: "pid: 0x%08lx", ((unsigned long)(REC->pid))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_getscheduler"] = *cSyscall
	cSyscall, err = parseSyscall("sched_getparam", string(`name: sys_enter_sched_getparam
ID: 293
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:struct sched_param * param;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, param: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->param))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_getparam"] = *cSyscall
	cSyscall, err = parseSyscall("sched_getattr", string(`name: sys_enter_sched_getattr
ID: 291
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:struct sched_attr * uattr;	offset:24;	size:8;	signed:0;
	field:unsigned int size;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, uattr: 0x%08lx, size: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->uattr)), ((unsigned long)(REC->size)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_getattr"] = *cSyscall
	cSyscall, err = parseSyscall("sched_setaffinity", string(`name: sys_enter_sched_setaffinity
ID: 289
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:unsigned int len;	offset:24;	size:8;	signed:0;
	field:unsigned long * user_mask_ptr;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, len: 0x%08lx, user_mask_ptr: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->len)), ((unsigned long)(REC->user_mask_ptr))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_setaffinity"] = *cSyscall
	cSyscall, err = parseSyscall("sched_getaffinity", string(`name: sys_enter_sched_getaffinity
ID: 287
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:unsigned int len;	offset:24;	size:8;	signed:0;
	field:unsigned long * user_mask_ptr;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, len: 0x%08lx, user_mask_ptr: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->len)), ((unsigned long)(REC->user_mask_ptr))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_getaffinity"] = *cSyscall
	cSyscall, err = parseSyscall("sched_yield", string(`name: sys_enter_sched_yield
ID: 285
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_yield"] = *cSyscall
	cSyscall, err = parseSyscall("sched_get_priority_max", string(`name: sys_enter_sched_get_priority_max
ID: 283
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int policy;	offset:16;	size:8;	signed:0;

print fmt: "policy: 0x%08lx", ((unsigned long)(REC->policy))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_get_priority_max"] = *cSyscall
	cSyscall, err = parseSyscall("sched_get_priority_min", string(`name: sys_enter_sched_get_priority_min
ID: 281
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int policy;	offset:16;	size:8;	signed:0;

print fmt: "policy: 0x%08lx", ((unsigned long)(REC->policy))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_get_priority_min"] = *cSyscall
	cSyscall, err = parseSyscall("sched_rr_get_interval", string(`name: sys_enter_sched_rr_get_interval
ID: 279
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:struct __kernel_timespec * interval;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, interval: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->interval))
`))
	if err != nil {
		return err
	}
	cSyscalls["sched_rr_get_interval"] = *cSyscall
	cSyscall, err = parseSyscall("getgroups", string(`name: sys_enter_getgroups
ID: 277
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int gidsetsize;	offset:16;	size:8;	signed:0;
	field:gid_t * grouplist;	offset:24;	size:8;	signed:0;

print fmt: "gidsetsize: 0x%08lx, grouplist: 0x%08lx", ((unsigned long)(REC->gidsetsize)), ((unsigned long)(REC->grouplist))
`))
	if err != nil {
		return err
	}
	cSyscalls["getgroups"] = *cSyscall
	cSyscall, err = parseSyscall("setgroups", string(`name: sys_enter_setgroups
ID: 275
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int gidsetsize;	offset:16;	size:8;	signed:0;
	field:gid_t * grouplist;	offset:24;	size:8;	signed:0;

print fmt: "gidsetsize: 0x%08lx, grouplist: 0x%08lx", ((unsigned long)(REC->gidsetsize)), ((unsigned long)(REC->grouplist))
`))
	if err != nil {
		return err
	}
	cSyscalls["setgroups"] = *cSyscall
	cSyscall, err = parseSyscall("reboot", string(`name: sys_enter_reboot
ID: 273
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int magic1;	offset:16;	size:8;	signed:0;
	field:int magic2;	offset:24;	size:8;	signed:0;
	field:unsigned int cmd;	offset:32;	size:8;	signed:0;
	field:void * arg;	offset:40;	size:8;	signed:0;

print fmt: "magic1: 0x%08lx, magic2: 0x%08lx, cmd: 0x%08lx, arg: 0x%08lx", ((unsigned long)(REC->magic1)), ((unsigned long)(REC->magic2)), ((unsigned long)(REC->cmd)), ((unsigned long)(REC->arg))
`))
	if err != nil {
		return err
	}
	cSyscalls["reboot"] = *cSyscall
	cSyscall, err = parseSyscall("setns", string(`name: sys_enter_setns
ID: 271
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int fd;	offset:16;	size:8;	signed:0;
	field:int nstype;	offset:24;	size:8;	signed:0;

print fmt: "fd: 0x%08lx, nstype: 0x%08lx", ((unsigned long)(REC->fd)), ((unsigned long)(REC->nstype))
`))
	if err != nil {
		return err
	}
	cSyscalls["setns"] = *cSyscall
	cSyscall, err = parseSyscall("setpriority", string(`name: sys_enter_setpriority
ID: 265
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:int who;	offset:24;	size:8;	signed:0;
	field:int niceval;	offset:32;	size:8;	signed:0;

print fmt: "which: 0x%08lx, who: 0x%08lx, niceval: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->who)), ((unsigned long)(REC->niceval))
`))
	if err != nil {
		return err
	}
	cSyscalls["setpriority"] = *cSyscall
	cSyscall, err = parseSyscall("getpriority", string(`name: sys_enter_getpriority
ID: 263
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:int who;	offset:24;	size:8;	signed:0;

print fmt: "which: 0x%08lx, who: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->who))
`))
	if err != nil {
		return err
	}
	cSyscalls["getpriority"] = *cSyscall
	cSyscall, err = parseSyscall("setregid", string(`name: sys_enter_setregid
ID: 261
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:gid_t rgid;	offset:16;	size:8;	signed:0;
	field:gid_t egid;	offset:24;	size:8;	signed:0;

print fmt: "rgid: 0x%08lx, egid: 0x%08lx", ((unsigned long)(REC->rgid)), ((unsigned long)(REC->egid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setregid"] = *cSyscall
	cSyscall, err = parseSyscall("setgid", string(`name: sys_enter_setgid
ID: 259
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:gid_t gid;	offset:16;	size:8;	signed:0;

print fmt: "gid: 0x%08lx", ((unsigned long)(REC->gid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setgid"] = *cSyscall
	cSyscall, err = parseSyscall("setreuid", string(`name: sys_enter_setreuid
ID: 257
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:uid_t ruid;	offset:16;	size:8;	signed:0;
	field:uid_t euid;	offset:24;	size:8;	signed:0;

print fmt: "ruid: 0x%08lx, euid: 0x%08lx", ((unsigned long)(REC->ruid)), ((unsigned long)(REC->euid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setreuid"] = *cSyscall
	cSyscall, err = parseSyscall("setuid", string(`name: sys_enter_setuid
ID: 255
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:uid_t uid;	offset:16;	size:8;	signed:0;

print fmt: "uid: 0x%08lx", ((unsigned long)(REC->uid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setuid"] = *cSyscall
	cSyscall, err = parseSyscall("setresuid", string(`name: sys_enter_setresuid
ID: 253
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:uid_t ruid;	offset:16;	size:8;	signed:0;
	field:uid_t euid;	offset:24;	size:8;	signed:0;
	field:uid_t suid;	offset:32;	size:8;	signed:0;

print fmt: "ruid: 0x%08lx, euid: 0x%08lx, suid: 0x%08lx", ((unsigned long)(REC->ruid)), ((unsigned long)(REC->euid)), ((unsigned long)(REC->suid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setresuid"] = *cSyscall
	cSyscall, err = parseSyscall("getresuid", string(`name: sys_enter_getresuid
ID: 251
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:uid_t * ruidp;	offset:16;	size:8;	signed:0;
	field:uid_t * euidp;	offset:24;	size:8;	signed:0;
	field:uid_t * suidp;	offset:32;	size:8;	signed:0;

print fmt: "ruidp: 0x%08lx, euidp: 0x%08lx, suidp: 0x%08lx", ((unsigned long)(REC->ruidp)), ((unsigned long)(REC->euidp)), ((unsigned long)(REC->suidp))
`))
	if err != nil {
		return err
	}
	cSyscalls["getresuid"] = *cSyscall
	cSyscall, err = parseSyscall("setresgid", string(`name: sys_enter_setresgid
ID: 249
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:gid_t rgid;	offset:16;	size:8;	signed:0;
	field:gid_t egid;	offset:24;	size:8;	signed:0;
	field:gid_t sgid;	offset:32;	size:8;	signed:0;

print fmt: "rgid: 0x%08lx, egid: 0x%08lx, sgid: 0x%08lx", ((unsigned long)(REC->rgid)), ((unsigned long)(REC->egid)), ((unsigned long)(REC->sgid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setresgid"] = *cSyscall
	cSyscall, err = parseSyscall("getresgid", string(`name: sys_enter_getresgid
ID: 247
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:gid_t * rgidp;	offset:16;	size:8;	signed:0;
	field:gid_t * egidp;	offset:24;	size:8;	signed:0;
	field:gid_t * sgidp;	offset:32;	size:8;	signed:0;

print fmt: "rgidp: 0x%08lx, egidp: 0x%08lx, sgidp: 0x%08lx", ((unsigned long)(REC->rgidp)), ((unsigned long)(REC->egidp)), ((unsigned long)(REC->sgidp))
`))
	if err != nil {
		return err
	}
	cSyscalls["getresgid"] = *cSyscall
	cSyscall, err = parseSyscall("setfsuid", string(`name: sys_enter_setfsuid
ID: 245
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:uid_t uid;	offset:16;	size:8;	signed:0;

print fmt: "uid: 0x%08lx", ((unsigned long)(REC->uid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setfsuid"] = *cSyscall
	cSyscall, err = parseSyscall("setfsgid", string(`name: sys_enter_setfsgid
ID: 243
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:gid_t gid;	offset:16;	size:8;	signed:0;

print fmt: "gid: 0x%08lx", ((unsigned long)(REC->gid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setfsgid"] = *cSyscall
	cSyscall, err = parseSyscall("getpid", string(`name: sys_enter_getpid
ID: 241
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getpid"] = *cSyscall
	cSyscall, err = parseSyscall("gettid", string(`name: sys_enter_gettid
ID: 239
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["gettid"] = *cSyscall
	cSyscall, err = parseSyscall("getppid", string(`name: sys_enter_getppid
ID: 237
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getppid"] = *cSyscall
	cSyscall, err = parseSyscall("getuid", string(`name: sys_enter_getuid
ID: 235
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getuid"] = *cSyscall
	cSyscall, err = parseSyscall("geteuid", string(`name: sys_enter_geteuid
ID: 233
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["geteuid"] = *cSyscall
	cSyscall, err = parseSyscall("getgid", string(`name: sys_enter_getgid
ID: 231
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getgid"] = *cSyscall
	cSyscall, err = parseSyscall("getegid", string(`name: sys_enter_getegid
ID: 229
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getegid"] = *cSyscall
	cSyscall, err = parseSyscall("times", string(`name: sys_enter_times
ID: 227
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct tms * tbuf;	offset:16;	size:8;	signed:0;

print fmt: "tbuf: 0x%08lx", ((unsigned long)(REC->tbuf))
`))
	if err != nil {
		return err
	}
	cSyscalls["times"] = *cSyscall
	cSyscall, err = parseSyscall("setpgid", string(`name: sys_enter_setpgid
ID: 225
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:pid_t pgid;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, pgid: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->pgid))
`))
	if err != nil {
		return err
	}
	cSyscalls["setpgid"] = *cSyscall
	cSyscall, err = parseSyscall("getpgid", string(`name: sys_enter_getpgid
ID: 223
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;

print fmt: "pid: 0x%08lx", ((unsigned long)(REC->pid))
`))
	if err != nil {
		return err
	}
	cSyscalls["getpgid"] = *cSyscall
	cSyscall, err = parseSyscall("getpgrp", string(`name: sys_enter_getpgrp
ID: 221
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["getpgrp"] = *cSyscall
	cSyscall, err = parseSyscall("getsid", string(`name: sys_enter_getsid
ID: 219
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;

print fmt: "pid: 0x%08lx", ((unsigned long)(REC->pid))
`))
	if err != nil {
		return err
	}
	cSyscalls["getsid"] = *cSyscall
	cSyscall, err = parseSyscall("setsid", string(`name: sys_enter_setsid
ID: 217
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["setsid"] = *cSyscall
	cSyscall, err = parseSyscall("newuname", string(`name: sys_enter_newuname
ID: 215
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct new_utsname * name;	offset:16;	size:8;	signed:0;

print fmt: "name: 0x%08lx", ((unsigned long)(REC->name))
`))
	if err != nil {
		return err
	}
	cSyscalls["newuname"] = *cSyscall
	cSyscall, err = parseSyscall("sethostname", string(`name: sys_enter_sethostname
ID: 213
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * name;	offset:16;	size:8;	signed:0;
	field:int len;	offset:24;	size:8;	signed:0;

print fmt: "name: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->name)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["sethostname"] = *cSyscall
	cSyscall, err = parseSyscall("setdomainname", string(`name: sys_enter_setdomainname
ID: 211
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:char * name;	offset:16;	size:8;	signed:0;
	field:int len;	offset:24;	size:8;	signed:0;

print fmt: "name: 0x%08lx, len: 0x%08lx", ((unsigned long)(REC->name)), ((unsigned long)(REC->len))
`))
	if err != nil {
		return err
	}
	cSyscalls["setdomainname"] = *cSyscall
	cSyscall, err = parseSyscall("getrlimit", string(`name: sys_enter_getrlimit
ID: 209
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int resource;	offset:16;	size:8;	signed:0;
	field:struct rlimit * rlim;	offset:24;	size:8;	signed:0;

print fmt: "resource: 0x%08lx, rlim: 0x%08lx", ((unsigned long)(REC->resource)), ((unsigned long)(REC->rlim))
`))
	if err != nil {
		return err
	}
	cSyscalls["getrlimit"] = *cSyscall
	cSyscall, err = parseSyscall("prlimit64", string(`name: sys_enter_prlimit64
ID: 207
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:unsigned int resource;	offset:24;	size:8;	signed:0;
	field:const struct rlimit64 * new_rlim;	offset:32;	size:8;	signed:0;
	field:struct rlimit64 * old_rlim;	offset:40;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, resource: 0x%08lx, new_rlim: 0x%08lx, old_rlim: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->resource)), ((unsigned long)(REC->new_rlim)), ((unsigned long)(REC->old_rlim))
`))
	if err != nil {
		return err
	}
	cSyscalls["prlimit64"] = *cSyscall
	cSyscall, err = parseSyscall("setrlimit", string(`name: sys_enter_setrlimit
ID: 205
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int resource;	offset:16;	size:8;	signed:0;
	field:struct rlimit * rlim;	offset:24;	size:8;	signed:0;

print fmt: "resource: 0x%08lx, rlim: 0x%08lx", ((unsigned long)(REC->resource)), ((unsigned long)(REC->rlim))
`))
	if err != nil {
		return err
	}
	cSyscalls["setrlimit"] = *cSyscall
	cSyscall, err = parseSyscall("getrusage", string(`name: sys_enter_getrusage
ID: 203
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int who;	offset:16;	size:8;	signed:0;
	field:struct rusage * ru;	offset:24;	size:8;	signed:0;

print fmt: "who: 0x%08lx, ru: 0x%08lx", ((unsigned long)(REC->who)), ((unsigned long)(REC->ru))
`))
	if err != nil {
		return err
	}
	cSyscalls["getrusage"] = *cSyscall
	cSyscall, err = parseSyscall("umask", string(`name: sys_enter_umask
ID: 201
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int mask;	offset:16;	size:8;	signed:0;

print fmt: "mask: 0x%08lx", ((unsigned long)(REC->mask))
`))
	if err != nil {
		return err
	}
	cSyscalls["umask"] = *cSyscall
	cSyscall, err = parseSyscall("prctl", string(`name: sys_enter_prctl
ID: 199
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int option;	offset:16;	size:8;	signed:0;
	field:unsigned long arg2;	offset:24;	size:8;	signed:0;
	field:unsigned long arg3;	offset:32;	size:8;	signed:0;
	field:unsigned long arg4;	offset:40;	size:8;	signed:0;
	field:unsigned long arg5;	offset:48;	size:8;	signed:0;

print fmt: "option: 0x%08lx, arg2: 0x%08lx, arg3: 0x%08lx, arg4: 0x%08lx, arg5: 0x%08lx", ((unsigned long)(REC->option)), ((unsigned long)(REC->arg2)), ((unsigned long)(REC->arg3)), ((unsigned long)(REC->arg4)), ((unsigned long)(REC->arg5))
`))
	if err != nil {
		return err
	}
	cSyscalls["prctl"] = *cSyscall
	cSyscall, err = parseSyscall("getcpu", string(`name: sys_enter_getcpu
ID: 197
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned * cpup;	offset:16;	size:8;	signed:0;
	field:unsigned * nodep;	offset:24;	size:8;	signed:0;
	field:struct getcpu_cache * unused;	offset:32;	size:8;	signed:0;

print fmt: "cpup: 0x%08lx, nodep: 0x%08lx, unused: 0x%08lx", ((unsigned long)(REC->cpup)), ((unsigned long)(REC->nodep)), ((unsigned long)(REC->unused))
`))
	if err != nil {
		return err
	}
	cSyscalls["getcpu"] = *cSyscall
	cSyscall, err = parseSyscall("sysinfo", string(`name: sys_enter_sysinfo
ID: 195
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct sysinfo * info;	offset:16;	size:8;	signed:0;

print fmt: "info: 0x%08lx", ((unsigned long)(REC->info))
`))
	if err != nil {
		return err
	}
	cSyscalls["sysinfo"] = *cSyscall
	cSyscall, err = parseSyscall("restart_syscall", string(`name: sys_enter_restart_syscall
ID: 191
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["restart_syscall"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigprocmask", string(`name: sys_enter_rt_sigprocmask
ID: 189
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int how;	offset:16;	size:8;	signed:0;
	field:sigset_t * nset;	offset:24;	size:8;	signed:0;
	field:sigset_t * oset;	offset:32;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:40;	size:8;	signed:0;

print fmt: "how: 0x%08lx, nset: 0x%08lx, oset: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->how)), ((unsigned long)(REC->nset)), ((unsigned long)(REC->oset)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigprocmask"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigpending", string(`name: sys_enter_rt_sigpending
ID: 187
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:sigset_t * uset;	offset:16;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:24;	size:8;	signed:0;

print fmt: "uset: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->uset)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigpending"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigtimedwait", string(`name: sys_enter_rt_sigtimedwait
ID: 185
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const sigset_t * uthese;	offset:16;	size:8;	signed:0;
	field:siginfo_t * uinfo;	offset:24;	size:8;	signed:0;
	field:const struct __kernel_timespec * uts;	offset:32;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:40;	size:8;	signed:0;

print fmt: "uthese: 0x%08lx, uinfo: 0x%08lx, uts: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->uthese)), ((unsigned long)(REC->uinfo)), ((unsigned long)(REC->uts)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigtimedwait"] = *cSyscall
	cSyscall, err = parseSyscall("kill", string(`name: sys_enter_kill
ID: 183
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:int sig;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, sig: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->sig))
`))
	if err != nil {
		return err
	}
	cSyscalls["kill"] = *cSyscall
	cSyscall, err = parseSyscall("pidfd_send_signal", string(`name: sys_enter_pidfd_send_signal
ID: 181
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int pidfd;	offset:16;	size:8;	signed:0;
	field:int sig;	offset:24;	size:8;	signed:0;
	field:siginfo_t * info;	offset:32;	size:8;	signed:0;
	field:unsigned int flags;	offset:40;	size:8;	signed:0;

print fmt: "pidfd: 0x%08lx, sig: 0x%08lx, info: 0x%08lx, flags: 0x%08lx", ((unsigned long)(REC->pidfd)), ((unsigned long)(REC->sig)), ((unsigned long)(REC->info)), ((unsigned long)(REC->flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["pidfd_send_signal"] = *cSyscall
	cSyscall, err = parseSyscall("tgkill", string(`name: sys_enter_tgkill
ID: 179
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t tgid;	offset:16;	size:8;	signed:0;
	field:pid_t pid;	offset:24;	size:8;	signed:0;
	field:int sig;	offset:32;	size:8;	signed:0;

print fmt: "tgid: 0x%08lx, pid: 0x%08lx, sig: 0x%08lx", ((unsigned long)(REC->tgid)), ((unsigned long)(REC->pid)), ((unsigned long)(REC->sig))
`))
	if err != nil {
		return err
	}
	cSyscalls["tgkill"] = *cSyscall
	cSyscall, err = parseSyscall("tkill", string(`name: sys_enter_tkill
ID: 177
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:int sig;	offset:24;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, sig: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->sig))
`))
	if err != nil {
		return err
	}
	cSyscalls["tkill"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigqueueinfo", string(`name: sys_enter_rt_sigqueueinfo
ID: 175
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t pid;	offset:16;	size:8;	signed:0;
	field:int sig;	offset:24;	size:8;	signed:0;
	field:siginfo_t * uinfo;	offset:32;	size:8;	signed:0;

print fmt: "pid: 0x%08lx, sig: 0x%08lx, uinfo: 0x%08lx", ((unsigned long)(REC->pid)), ((unsigned long)(REC->sig)), ((unsigned long)(REC->uinfo))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigqueueinfo"] = *cSyscall
	cSyscall, err = parseSyscall("rt_tgsigqueueinfo", string(`name: sys_enter_rt_tgsigqueueinfo
ID: 173
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t tgid;	offset:16;	size:8;	signed:0;
	field:pid_t pid;	offset:24;	size:8;	signed:0;
	field:int sig;	offset:32;	size:8;	signed:0;
	field:siginfo_t * uinfo;	offset:40;	size:8;	signed:0;

print fmt: "tgid: 0x%08lx, pid: 0x%08lx, sig: 0x%08lx, uinfo: 0x%08lx", ((unsigned long)(REC->tgid)), ((unsigned long)(REC->pid)), ((unsigned long)(REC->sig)), ((unsigned long)(REC->uinfo))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_tgsigqueueinfo"] = *cSyscall
	cSyscall, err = parseSyscall("sigaltstack", string(`name: sys_enter_sigaltstack
ID: 171
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:const stack_t * uss;	offset:16;	size:8;	signed:0;
	field:stack_t * uoss;	offset:24;	size:8;	signed:0;

print fmt: "uss: 0x%08lx, uoss: 0x%08lx", ((unsigned long)(REC->uss)), ((unsigned long)(REC->uoss))
`))
	if err != nil {
		return err
	}
	cSyscalls["sigaltstack"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigaction", string(`name: sys_enter_rt_sigaction
ID: 169
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int sig;	offset:16;	size:8;	signed:0;
	field:const struct sigaction * act;	offset:24;	size:8;	signed:0;
	field:struct sigaction * oact;	offset:32;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:40;	size:8;	signed:0;

print fmt: "sig: 0x%08lx, act: 0x%08lx, oact: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->sig)), ((unsigned long)(REC->act)), ((unsigned long)(REC->oact)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigaction"] = *cSyscall
	cSyscall, err = parseSyscall("pause", string(`name: sys_enter_pause
ID: 167
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["pause"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigsuspend", string(`name: sys_enter_rt_sigsuspend
ID: 165
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:sigset_t * unewset;	offset:16;	size:8;	signed:0;
	field:size_t sigsetsize;	offset:24;	size:8;	signed:0;

print fmt: "unewset: 0x%08lx, sigsetsize: 0x%08lx", ((unsigned long)(REC->unewset)), ((unsigned long)(REC->sigsetsize))
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigsuspend"] = *cSyscall
	cSyscall, err = parseSyscall("ptrace", string(`name: sys_enter_ptrace
ID: 163
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:long request;	offset:16;	size:8;	signed:0;
	field:long pid;	offset:24;	size:8;	signed:0;
	field:unsigned long addr;	offset:32;	size:8;	signed:0;
	field:unsigned long data;	offset:40;	size:8;	signed:0;

print fmt: "request: 0x%08lx, pid: 0x%08lx, addr: 0x%08lx, data: 0x%08lx", ((unsigned long)(REC->request)), ((unsigned long)(REC->pid)), ((unsigned long)(REC->addr)), ((unsigned long)(REC->data))
`))
	if err != nil {
		return err
	}
	cSyscalls["ptrace"] = *cSyscall
	cSyscall, err = parseSyscall("capget", string(`name: sys_enter_capget
ID: 161
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:cap_user_header_t header;	offset:16;	size:8;	signed:0;
	field:cap_user_data_t dataptr;	offset:24;	size:8;	signed:0;

print fmt: "header: 0x%08lx, dataptr: 0x%08lx", ((unsigned long)(REC->header)), ((unsigned long)(REC->dataptr))
`))
	if err != nil {
		return err
	}
	cSyscalls["capget"] = *cSyscall
	cSyscall, err = parseSyscall("capset", string(`name: sys_enter_capset
ID: 159
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:cap_user_header_t header;	offset:16;	size:8;	signed:0;
	field:const cap_user_data_t data;	offset:24;	size:8;	signed:0;

print fmt: "header: 0x%08lx, data: 0x%08lx", ((unsigned long)(REC->header)), ((unsigned long)(REC->data))
`))
	if err != nil {
		return err
	}
	cSyscalls["capset"] = *cSyscall
	cSyscall, err = parseSyscall("sysctl", string(`name: sys_enter_sysctl
ID: 157
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:struct __sysctl_args * args;	offset:16;	size:8;	signed:0;

print fmt: "args: 0x%08lx", ((unsigned long)(REC->args))
`))
	if err != nil {
		return err
	}
	cSyscalls["sysctl"] = *cSyscall
	cSyscall, err = parseSyscall("exit", string(`name: sys_enter_exit
ID: 150
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int error_code;	offset:16;	size:8;	signed:0;

print fmt: "error_code: 0x%08lx", ((unsigned long)(REC->error_code))
`))
	if err != nil {
		return err
	}
	cSyscalls["exit"] = *cSyscall
	cSyscall, err = parseSyscall("exit_group", string(`name: sys_enter_exit_group
ID: 148
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int error_code;	offset:16;	size:8;	signed:0;

print fmt: "error_code: 0x%08lx", ((unsigned long)(REC->error_code))
`))
	if err != nil {
		return err
	}
	cSyscalls["exit_group"] = *cSyscall
	cSyscall, err = parseSyscall("waitid", string(`name: sys_enter_waitid
ID: 146
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int which;	offset:16;	size:8;	signed:0;
	field:pid_t upid;	offset:24;	size:8;	signed:0;
	field:struct siginfo * infop;	offset:32;	size:8;	signed:0;
	field:int options;	offset:40;	size:8;	signed:0;
	field:struct rusage * ru;	offset:48;	size:8;	signed:0;

print fmt: "which: 0x%08lx, upid: 0x%08lx, infop: 0x%08lx, options: 0x%08lx, ru: 0x%08lx", ((unsigned long)(REC->which)), ((unsigned long)(REC->upid)), ((unsigned long)(REC->infop)), ((unsigned long)(REC->options)), ((unsigned long)(REC->ru))
`))
	if err != nil {
		return err
	}
	cSyscalls["waitid"] = *cSyscall
	cSyscall, err = parseSyscall("wait4", string(`name: sys_enter_wait4
ID: 144
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:pid_t upid;	offset:16;	size:8;	signed:0;
	field:int * stat_addr;	offset:24;	size:8;	signed:0;
	field:int options;	offset:32;	size:8;	signed:0;
	field:struct rusage * ru;	offset:40;	size:8;	signed:0;

print fmt: "upid: 0x%08lx, stat_addr: 0x%08lx, options: 0x%08lx, ru: 0x%08lx", ((unsigned long)(REC->upid)), ((unsigned long)(REC->stat_addr)), ((unsigned long)(REC->options)), ((unsigned long)(REC->ru))
`))
	if err != nil {
		return err
	}
	cSyscalls["wait4"] = *cSyscall
	cSyscall, err = parseSyscall("personality", string(`name: sys_enter_personality
ID: 139
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int personality;	offset:16;	size:8;	signed:0;

print fmt: "personality: 0x%08lx", ((unsigned long)(REC->personality))
`))
	if err != nil {
		return err
	}
	cSyscalls["personality"] = *cSyscall
	cSyscall, err = parseSyscall("set_tid_address", string(`name: sys_enter_set_tid_address
ID: 135
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int * tidptr;	offset:16;	size:8;	signed:0;

print fmt: "tidptr: 0x%08lx", ((unsigned long)(REC->tidptr))
`))
	if err != nil {
		return err
	}
	cSyscalls["set_tid_address"] = *cSyscall
	cSyscall, err = parseSyscall("fork", string(`name: sys_enter_fork
ID: 133
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["fork"] = *cSyscall
	cSyscall, err = parseSyscall("vfork", string(`name: sys_enter_vfork
ID: 131
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["vfork"] = *cSyscall
	cSyscall, err = parseSyscall("clone", string(`name: sys_enter_clone
ID: 129
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long clone_flags;	offset:16;	size:8;	signed:0;
	field:unsigned long newsp;	offset:24;	size:8;	signed:0;
	field:int * parent_tidptr;	offset:32;	size:8;	signed:0;
	field:int * child_tidptr;	offset:40;	size:8;	signed:0;
	field:unsigned long tls;	offset:48;	size:8;	signed:0;

print fmt: "clone_flags: 0x%08lx, newsp: 0x%08lx, parent_tidptr: 0x%08lx, child_tidptr: 0x%08lx, tls: 0x%08lx", ((unsigned long)(REC->clone_flags)), ((unsigned long)(REC->newsp)), ((unsigned long)(REC->parent_tidptr)), ((unsigned long)(REC->child_tidptr)), ((unsigned long)(REC->tls))
`))
	if err != nil {
		return err
	}
	cSyscalls["clone"] = *cSyscall
	cSyscall, err = parseSyscall("unshare", string(`name: sys_enter_unshare
ID: 127
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long unshare_flags;	offset:16;	size:8;	signed:0;

print fmt: "unshare_flags: 0x%08lx", ((unsigned long)(REC->unshare_flags))
`))
	if err != nil {
		return err
	}
	cSyscalls["unshare"] = *cSyscall
	cSyscall, err = parseSyscall("mmap", string(`name: sys_enter_mmap
ID: 101
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long addr;	offset:16;	size:8;	signed:0;
	field:unsigned long len;	offset:24;	size:8;	signed:0;
	field:unsigned long prot;	offset:32;	size:8;	signed:0;
	field:unsigned long flags;	offset:40;	size:8;	signed:0;
	field:unsigned long fd;	offset:48;	size:8;	signed:0;
	field:unsigned long off;	offset:56;	size:8;	signed:0;

print fmt: "addr: 0x%08lx, len: 0x%08lx, prot: 0x%08lx, flags: 0x%08lx, fd: 0x%08lx, off: 0x%08lx", ((unsigned long)(REC->addr)), ((unsigned long)(REC->len)), ((unsigned long)(REC->prot)), ((unsigned long)(REC->flags)), ((unsigned long)(REC->fd)), ((unsigned long)(REC->off))
`))
	if err != nil {
		return err
	}
	cSyscalls["mmap"] = *cSyscall
	cSyscall, err = parseSyscall("modify_ldt", string(`name: sys_enter_modify_ldt
ID: 99
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int func;	offset:16;	size:8;	signed:0;
	field:void * ptr;	offset:24;	size:8;	signed:0;
	field:unsigned long bytecount;	offset:32;	size:8;	signed:0;

print fmt: "func: 0x%08lx, ptr: 0x%08lx, bytecount: 0x%08lx", ((unsigned long)(REC->func)), ((unsigned long)(REC->ptr)), ((unsigned long)(REC->bytecount))
`))
	if err != nil {
		return err
	}
	cSyscalls["modify_ldt"] = *cSyscall
	cSyscall, err = parseSyscall("ioperm", string(`name: sys_enter_ioperm
ID: 96
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned long from;	offset:16;	size:8;	signed:0;
	field:unsigned long num;	offset:24;	size:8;	signed:0;
	field:int turn_on;	offset:32;	size:8;	signed:0;

print fmt: "from: 0x%08lx, num: 0x%08lx, turn_on: 0x%08lx", ((unsigned long)(REC->from)), ((unsigned long)(REC->num)), ((unsigned long)(REC->turn_on))
`))
	if err != nil {
		return err
	}
	cSyscalls["ioperm"] = *cSyscall
	cSyscall, err = parseSyscall("iopl", string(`name: sys_enter_iopl
ID: 94
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:unsigned int level;	offset:16;	size:8;	signed:0;

print fmt: "level: 0x%08lx", ((unsigned long)(REC->level))
`))
	if err != nil {
		return err
	}
	cSyscalls["iopl"] = *cSyscall
	cSyscall, err = parseSyscall("rt_sigreturn", string(`name: sys_enter_rt_sigreturn
ID: 58
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;

print fmt: ""
`))
	if err != nil {
		return err
	}
	cSyscalls["rt_sigreturn"] = *cSyscall
	cSyscall, err = parseSyscall("arch_prctl", string(`name: sys_enter_arch_prctl
ID: 56
format:
	field:unsigned short common_type;	offset:0;	size:2;	signed:0;
	field:unsigned char common_flags;	offset:2;	size:1;	signed:0;
	field:unsigned char common_preempt_count;	offset:3;	size:1;	signed:0;
	field:int common_pid;	offset:4;	size:4;	signed:1;

	field:int __syscall_nr;	offset:8;	size:4;	signed:1;
	field:int option;	offset:16;	size:8;	signed:0;
	field:unsigned long arg2;	offset:24;	size:8;	signed:0;

print fmt: "option: 0x%08lx, arg2: 0x%08lx", ((unsigned long)(REC->option)), ((unsigned long)(REC->arg2))
`))
	if err != nil {
		return err
	}
	cSyscalls["arch_prctl"] = *cSyscall
	return nil
}
